note
 description:"[
		Cloud Manager API
 		This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
  		The version of the OpenAPI document: 1.0.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class REPOSITORY_BRANCH 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    program_id: detachable STRING_32 
      -- Identifier of the program. Unique within the space
    repository_id: INTEGER_64 
      -- Identifier of the repository
    name: detachable STRING_32 
      -- Name of the branch
    var_links: detachable REPOSITORY_BRANCH__LINKS 
      

feature -- Change Element  
 
    set_program_id (a_name: like program_id)
        -- Set 'program_id' with 'a_name'.
      do
        program_id := a_name
      ensure
        program_id_set: program_id = a_name		
      end

    set_repository_id (a_name: like repository_id)
        -- Set 'repository_id' with 'a_name'.
      do
        repository_id := a_name
      ensure
        repository_id_set: repository_id = a_name		
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name		
      end

    set_var_links (a_name: like var_links)
        -- Set 'var_links' with 'a_name'.
      do
        var_links := a_name
      ensure
        var_links_set: var_links = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass REPOSITORY_BRANCH%N")
        if attached program_id as l_program_id then
          Result.append ("%Nprogram_id:")
          Result.append (l_program_id.out)
          Result.append ("%N")    
        end  
        if attached repository_id as l_repository_id then
          Result.append ("%Nrepository_id:")
          Result.append (l_repository_id.out)
          Result.append ("%N")    
        end  
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")    
        end  
        if attached var_links as l_var_links then
          Result.append ("%Nvar_links:")
          Result.append (l_var_links.out)
          Result.append ("%N")    
        end  
      end
end


