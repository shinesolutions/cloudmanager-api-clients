note
 description:"[
		Cloud Manager API
 		This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
  		The version of the OpenAPI document: 1.0.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class REQUESTED_PAGE_DETAILS 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    start: INTEGER_32 
      
    limit: INTEGER_32 
      
    order_by: detachable STRING_32 
      
    property: detachable LIST [STRING_32] 
      
    type: detachable STRING_32 
      
    next: INTEGER_32 
      
    prev: INTEGER_32 
      

feature -- Change Element  
 
    set_start (a_name: like start)
        -- Set 'start' with 'a_name'.
      do
        start := a_name
      ensure
        start_set: start = a_name		
      end

    set_limit (a_name: like limit)
        -- Set 'limit' with 'a_name'.
      do
        limit := a_name
      ensure
        limit_set: limit = a_name		
      end

    set_order_by (a_name: like order_by)
        -- Set 'order_by' with 'a_name'.
      do
        order_by := a_name
      ensure
        order_by_set: order_by = a_name		
      end

    set_property (a_name: like property)
        -- Set 'property' with 'a_name'.
      do
        property := a_name
      ensure
        property_set: property = a_name		
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name		
      end

    set_next (a_name: like next)
        -- Set 'next' with 'a_name'.
      do
        next := a_name
      ensure
        next_set: next = a_name		
      end

    set_prev (a_name: like prev)
        -- Set 'prev' with 'a_name'.
      do
        prev := a_name
      ensure
        prev_set: prev = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass REQUESTED_PAGE_DETAILS%N")
        if attached start as l_start then
          Result.append ("%Nstart:")
          Result.append (l_start.out)
          Result.append ("%N")    
        end  
        if attached limit as l_limit then
          Result.append ("%Nlimit:")
          Result.append (l_limit.out)
          Result.append ("%N")    
        end  
        if attached order_by as l_order_by then
          Result.append ("%Norder_by:")
          Result.append (l_order_by.out)
          Result.append ("%N")    
        end  
        if attached property as l_property then
          across l_property as ic loop
            Result.append ("%N property:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")    
        end  
        if attached next as l_next then
          Result.append ("%Nnext:")
          Result.append (l_next.out)
          Result.append ("%N")    
        end  
        if attached prev as l_prev then
          Result.append ("%Nprev:")
          Result.append (l_prev.out)
          Result.append ("%N")    
        end  
      end
end


