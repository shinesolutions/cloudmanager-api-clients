/* tslint:disable */
/* eslint-disable */
/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EnvironmentLogLinks,
    EnvironmentLogLinksFromJSON,
    EnvironmentLogLinksFromJSONTyped,
    EnvironmentLogLinksToJSON,
} from './';

/**
 * Log from Environment
 * @export
 * @interface EnvironmentLog
 */
export interface EnvironmentLog {
    /**
     * Name of the service
     * @type {string}
     * @memberof EnvironmentLog
     */
    service?: string;
    /**
     * Name of the Log
     * @type {string}
     * @memberof EnvironmentLog
     */
    name?: string;
    /**
     * date of the Log
     * @type {string}
     * @memberof EnvironmentLog
     */
    date?: string;
    /**
     * 
     * @type {number}
     * @memberof EnvironmentLog
     */
    programId?: number;
    /**
     * 
     * @type {number}
     * @memberof EnvironmentLog
     */
    environmentId?: number;
    /**
     * 
     * @type {EnvironmentLogLinks}
     * @memberof EnvironmentLog
     */
    links?: EnvironmentLogLinks;
}

export function EnvironmentLogFromJSON(json: any): EnvironmentLog {
    return EnvironmentLogFromJSONTyped(json, false);
}

export function EnvironmentLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnvironmentLog {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'service': !exists(json, 'service') ? undefined : json['service'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'programId': !exists(json, 'programId') ? undefined : json['programId'],
        'environmentId': !exists(json, 'environmentId') ? undefined : json['environmentId'],
        'links': !exists(json, '_links') ? undefined : EnvironmentLogLinksFromJSON(json['_links']),
    };
}

export function EnvironmentLogToJSON(value?: EnvironmentLog | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'service': value.service,
        'name': value.name,
        'date': value.date,
        'programId': value.programId,
        'environmentId': value.environmentId,
        '_links': EnvironmentLogLinksToJSON(value.links),
    };
}


