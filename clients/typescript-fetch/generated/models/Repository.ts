/* tslint:disable */
/* eslint-disable */
/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RepositoryLinks,
    RepositoryLinksFromJSON,
    RepositoryLinksFromJSONTyped,
    RepositoryLinksToJSON,
} from './';

/**
 * A sourcecode repository
 * @export
 * @interface Repository
 */
export interface Repository {
    /**
     * Repository name
     * @type {string}
     * @memberof Repository
     */
    repo?: string;
    /**
     * description
     * @type {string}
     * @memberof Repository
     */
    description?: string;
    /**
     * 
     * @type {RepositoryLinks}
     * @memberof Repository
     */
    links?: RepositoryLinks;
}

export function RepositoryFromJSON(json: any): Repository {
    return RepositoryFromJSONTyped(json, false);
}

export function RepositoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Repository {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'repo': !exists(json, 'repo') ? undefined : json['repo'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'links': !exists(json, '_links') ? undefined : RepositoryLinksFromJSON(json['_links']),
    };
}

export function RepositoryToJSON(value?: Repository | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'repo': value.repo,
        'description': value.description,
        '_links': RepositoryLinksToJSON(value.links),
    };
}


