/* tslint:disable */
/* eslint-disable */
/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Repository,
    RepositoryFromJSON,
    RepositoryFromJSONTyped,
    RepositoryToJSON,
} from './';

/**
 * 
 * @export
 * @interface RepositoryListEmbedded
 */
export interface RepositoryListEmbedded {
    /**
     * 
     * @type {Array<Repository>}
     * @memberof RepositoryListEmbedded
     */
    repositories?: Array<Repository>;
}

export function RepositoryListEmbeddedFromJSON(json: any): RepositoryListEmbedded {
    return RepositoryListEmbeddedFromJSONTyped(json, false);
}

export function RepositoryListEmbeddedFromJSONTyped(json: any, ignoreDiscriminator: boolean): RepositoryListEmbedded {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'repositories': !exists(json, 'repositories') ? undefined : ((json['repositories'] as Array<any>).map(RepositoryFromJSON)),
    };
}

export function RepositoryListEmbeddedToJSON(value?: RepositoryListEmbedded | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'repositories': value.repositories === undefined ? undefined : ((value.repositories as Array<any>).map(RepositoryToJSON)),
    };
}


