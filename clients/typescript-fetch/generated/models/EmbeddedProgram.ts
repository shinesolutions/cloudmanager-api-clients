/* tslint:disable */
/* eslint-disable */
/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Describes an __Embedded Program__
 * @export
 * @interface EmbeddedProgram
 */
export interface EmbeddedProgram {
    /**
     * Identifier of the program. Unique within the space.
     * @type {string}
     * @memberof EmbeddedProgram
     */
    readonly id?: string;
    /**
     * Name of the program
     * @type {string}
     * @memberof EmbeddedProgram
     */
    readonly name?: string;
    /**
     * Whether this Program has been enabled for Cloud Manager usage
     * @type {boolean}
     * @memberof EmbeddedProgram
     */
    readonly enabled?: boolean;
    /**
     * Tenant Id
     * @type {string}
     * @memberof EmbeddedProgram
     */
    readonly tenantId?: string;
}

export function EmbeddedProgramFromJSON(json: any): EmbeddedProgram {
    return EmbeddedProgramFromJSONTyped(json, false);
}

export function EmbeddedProgramFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmbeddedProgram {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
    };
}

export function EmbeddedProgramToJSON(value?: EmbeddedProgram | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}


