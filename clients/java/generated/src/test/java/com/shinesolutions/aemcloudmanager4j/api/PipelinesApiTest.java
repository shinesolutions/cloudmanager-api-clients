/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.aemcloudmanager4j.api;

import com.shinesolutions.aemcloudmanager4j.ApiException;
import com.shinesolutions.aemcloudmanager4j.model.Pipeline;
import com.shinesolutions.aemcloudmanager4j.model.PipelineList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PipelinesApi
 */
@Ignore
public class PipelinesApiTest {

    private final PipelinesApi api = new PipelinesApi();

    
    /**
     * Delete a Pipeline
     *
     * Delete a pipeline. All the data is wiped.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePipelineTest() throws ApiException {
        String programId = null;
        String pipelineId = null;
        String xGwImsOrgId = null;
        String authorization = null;
        String xApiKey = null;
        api.deletePipeline(programId, pipelineId, xGwImsOrgId, authorization, xApiKey);

        // TODO: test validations
    }
    
    /**
     * Get Pipeline
     *
     * Returns a pipeline by its id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPipelineTest() throws ApiException {
        String programId = null;
        String pipelineId = null;
        String xGwImsOrgId = null;
        String authorization = null;
        String xApiKey = null;
        Pipeline response = api.getPipeline(programId, pipelineId, xGwImsOrgId, authorization, xApiKey);

        // TODO: test validations
    }
    
    /**
     * List Pipelines
     *
     * Returns all the pipelines that the requesting user has access to in an program
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPipelinesTest() throws ApiException {
        String programId = null;
        String xGwImsOrgId = null;
        String authorization = null;
        String xApiKey = null;
        PipelineList response = api.getPipelines(programId, xGwImsOrgId, authorization, xApiKey);

        // TODO: test validations
    }
    
    /**
     * Patches Pipeline
     *
     * Patches a pipeline within an program.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchPipelineTest() throws ApiException {
        String programId = null;
        String pipelineId = null;
        String xGwImsOrgId = null;
        String authorization = null;
        String xApiKey = null;
        String contentType = null;
        Pipeline body = null;
        Pipeline response = api.patchPipeline(programId, pipelineId, xGwImsOrgId, authorization, xApiKey, contentType, body);

        // TODO: test validations
    }
    
}
