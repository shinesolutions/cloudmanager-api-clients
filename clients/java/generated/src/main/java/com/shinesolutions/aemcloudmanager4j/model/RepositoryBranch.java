/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.aemcloudmanager4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.aemcloudmanager4j.model.RepositoryBranchLinks;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents a Git Branch
 */
@ApiModel(description = "Represents a Git Branch")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-23T00:28:14.729Z[GMT]")
public class RepositoryBranch {
  public static final String SERIALIZED_NAME_PROGRAM_ID = "programId";
  @SerializedName(SERIALIZED_NAME_PROGRAM_ID)
  private String programId;

  public static final String SERIALIZED_NAME_REPOSITORY_ID = "repositoryId";
  @SerializedName(SERIALIZED_NAME_REPOSITORY_ID)
  private Long repositoryId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LINKS = "_links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private RepositoryBranchLinks links;


  public RepositoryBranch programId(String programId) {
    
    this.programId = programId;
    return this;
  }

   /**
   * Identifier of the program. Unique within the space
   * @return programId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14", value = "Identifier of the program. Unique within the space")

  public String getProgramId() {
    return programId;
  }


  public void setProgramId(String programId) {
    this.programId = programId;
  }


  public RepositoryBranch repositoryId(Long repositoryId) {
    
    this.repositoryId = repositoryId;
    return this;
  }

   /**
   * Identifier of the repository
   * @return repositoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Identifier of the repository")

  public Long getRepositoryId() {
    return repositoryId;
  }


  public void setRepositoryId(Long repositoryId) {
    this.repositoryId = repositoryId;
  }


  public RepositoryBranch name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the branch
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "master", value = "Name of the branch")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RepositoryBranch links(RepositoryBranchLinks links) {
    
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RepositoryBranchLinks getLinks() {
    return links;
  }


  public void setLinks(RepositoryBranchLinks links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepositoryBranch repositoryBranch = (RepositoryBranch) o;
    return Objects.equals(this.programId, repositoryBranch.programId) &&
        Objects.equals(this.repositoryId, repositoryBranch.repositoryId) &&
        Objects.equals(this.name, repositoryBranch.name) &&
        Objects.equals(this.links, repositoryBranch.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(programId, repositoryId, name, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepositoryBranch {\n");
    sb.append("    programId: ").append(toIndentedString(programId)).append("\n");
    sb.append("    repositoryId: ").append(toIndentedString(repositoryId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

