{-
   Cloud Manager API
   This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.

   The version of the OpenAPI document: 1.0.0
   Contact: opensource@shinesolutions.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Request.Variables exposing (getEnvironmentVariables, patchEnvironmentVariables)

import Data.VariableList as VariableList exposing (VariableList)
import Dict
import Http
import Json.Decode as Decode
import Url.Builder as Url




basePath : String
basePath =
    "https://cloudmanager.adobe.io"


{-| List the user defined variables for an environment (Cloud Service only).
-}
getEnvironmentVariables :
    { xGwImsOrgId : String

    , authorization : String

    , xApiKey : String
    } -> 
    { onSend : Result Http.Error VariableList -> msg



    , programId : String    , environmentId : String

    }
    -> Cmd msg
getEnvironmentVariables headers params =
    Http.request
        { method = "GET"
        , headers = List.filterMap identity [(Just << Http.header "x-gw-ims-org-id" << identity) headers.xGwImsOrgId, (Just << Http.header "Authorization" << identity) headers.authorization, (Just << Http.header "x-api-key" << identity) headers.xApiKey]
        , url = Url.crossOrigin basePath
            ["api", "program", identity params.programId, "environment", identity params.environmentId, "variables"]
            (List.filterMap identity [])
        , body = Http.emptyBody
        , expect = Http.expectJson params.onSend VariableList.decoder
        , timeout = Just 30000
        , tracker = Nothing
        }


{-| Modify multiple environment variables (Cloud Service only). To delete a variable, include it with an empty value.
-}
patchEnvironmentVariables :
    { xGwImsOrgId : String

    , authorization : String

    , xApiKey : String

    , contentType : String
    } -> 
    { onSend : Result Http.Error VariableList -> msg


    , body : Variable
    , programId : String    , environmentId : String

    }
    -> Cmd msg
patchEnvironmentVariables headers params =
    Http.request
        { method = "PATCH"
        , headers = List.filterMap identity [(Just << Http.header "x-gw-ims-org-id" << identity) headers.xGwImsOrgId, (Just << Http.header "Authorization" << identity) headers.authorization, (Just << Http.header "x-api-key" << identity) headers.xApiKey, (Just << Http.header "Content-Type" << identity) headers.contentType]
        , url = Url.crossOrigin basePath
            ["api", "program", identity params.programId, "environment", identity params.environmentId, "variables"]
            (List.filterMap identity [])
        , body = Http.jsonBody <| Variable.encode params.body
        , expect = Http.expectJson params.onSend VariableList.decoder
        , timeout = Just 30000
        , tracker = Nothing
        }
