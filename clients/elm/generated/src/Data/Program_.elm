{-
   Cloud Manager API
   This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.

   The version of the OpenAPI document: 1.0.0
   Contact: opensource@shinesolutions.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.Program_ exposing (Program_, decoder, encode, encodeWithTag, toString)

import Data.ProgramLinks as ProgramLinks exposing (ProgramLinks)
import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


{-| Describes a __Program__
-}
type alias Program_ =
    { id : Maybe (String)
    , name : String
    , enabled : Maybe (Bool)
    , tenantId : Maybe (String)
    , imsOrgId : Maybe (String)
    , links : Maybe (ProgramLinks)
    }


decoder : Decoder Program_
decoder =
    Decode.succeed Program_
        |> optional "id" (Decode.nullable Decode.string) Nothing
        |> required "name" Decode.string
        |> optional "enabled" (Decode.nullable Decode.bool) (Just False)
        |> optional "tenantId" (Decode.nullable Decode.string) Nothing
        |> optional "imsOrgId" (Decode.nullable Decode.string) Nothing
        |> optional "_links" (Decode.nullable ProgramLinks.decoder) Nothing



encode : Program_ -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> Program_ -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : Program_ -> List (String, Encode.Value)
encodePairs model =
    [ ( "id", Maybe.withDefault Encode.null (Maybe.map Encode.string model.id) )
    , ( "name", Encode.string model.name )
    , ( "enabled", Maybe.withDefault Encode.null (Maybe.map Encode.bool model.enabled) )
    , ( "tenantId", Maybe.withDefault Encode.null (Maybe.map Encode.string model.tenantId) )
    , ( "imsOrgId", Maybe.withDefault Encode.null (Maybe.map Encode.string model.imsOrgId) )
    , ( "_links", Maybe.withDefault Encode.null (Maybe.map ProgramLinks.encode model.links) )
    ]



toString : Program_ -> String
toString =
    Encode.encode 0 << encode




