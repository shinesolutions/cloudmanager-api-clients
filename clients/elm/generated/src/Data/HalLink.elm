{-
   Cloud Manager API
   This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.

   The version of the OpenAPI document: 1.0.0
   Contact: opensource@shinesolutions.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.HalLink exposing (HalLink, decoder, encode, encodeWithTag, toString)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias HalLink =
    { href : Maybe (String)
    , templated : Maybe (Bool)
    , type_ : Maybe (String)
    , deprecation : Maybe (String)
    , profile : Maybe (String)
    , title : Maybe (String)
    , hreflang : Maybe (String)
    , name : Maybe (String)
    }


decoder : Decoder HalLink
decoder =
    Decode.succeed HalLink
        |> optional "href" (Decode.nullable Decode.string) Nothing
        |> optional "templated" (Decode.nullable Decode.bool) (Just False)
        |> optional "type" (Decode.nullable Decode.string) Nothing
        |> optional "deprecation" (Decode.nullable Decode.string) Nothing
        |> optional "profile" (Decode.nullable Decode.string) Nothing
        |> optional "title" (Decode.nullable Decode.string) Nothing
        |> optional "hreflang" (Decode.nullable Decode.string) Nothing
        |> optional "name" (Decode.nullable Decode.string) Nothing



encode : HalLink -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> HalLink -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : HalLink -> List (String, Encode.Value)
encodePairs model =
    [ ( "href", Maybe.withDefault Encode.null (Maybe.map Encode.string model.href) )
    , ( "templated", Maybe.withDefault Encode.null (Maybe.map Encode.bool model.templated) )
    , ( "type", Maybe.withDefault Encode.null (Maybe.map Encode.string model.type_) )
    , ( "deprecation", Maybe.withDefault Encode.null (Maybe.map Encode.string model.deprecation) )
    , ( "profile", Maybe.withDefault Encode.null (Maybe.map Encode.string model.profile) )
    , ( "title", Maybe.withDefault Encode.null (Maybe.map Encode.string model.title) )
    , ( "hreflang", Maybe.withDefault Encode.null (Maybe.map Encode.string model.hreflang) )
    , ( "name", Maybe.withDefault Encode.null (Maybe.map Encode.string model.name) )
    ]



toString : HalLink -> String
toString =
    Encode.encode 0 << encode




