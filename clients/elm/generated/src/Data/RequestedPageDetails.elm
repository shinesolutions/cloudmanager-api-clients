{-
   Cloud Manager API
   This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.

   The version of the OpenAPI document: 1.0.0
   Contact: opensource@shinesolutions.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.RequestedPageDetails exposing (RequestedPageDetails, decoder, encode, encodeWithTag, toString)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


{-| Filtering and sorting page details
-}
type alias RequestedPageDetails =
    { start : Maybe (Int)
    , limit : Maybe (Int)
    , orderBy : Maybe (String)
    , property : Maybe ((List String))
    , type_ : Maybe (String)
    , next : Maybe (Int)
    , prev : Maybe (Int)
    }


decoder : Decoder RequestedPageDetails
decoder =
    Decode.succeed RequestedPageDetails
        |> optional "start" (Decode.nullable Decode.int) Nothing
        |> optional "limit" (Decode.nullable Decode.int) Nothing
        |> optional "orderBy" (Decode.nullable Decode.string) Nothing
        |> optional "property" (Decode.nullable (Decode.list Decode.string)) Nothing
        |> optional "type" (Decode.nullable Decode.string) Nothing
        |> optional "next" (Decode.nullable Decode.int) Nothing
        |> optional "prev" (Decode.nullable Decode.int) Nothing



encode : RequestedPageDetails -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> RequestedPageDetails -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : RequestedPageDetails -> List (String, Encode.Value)
encodePairs model =
    [ ( "start", Maybe.withDefault Encode.null (Maybe.map Encode.int model.start) )
    , ( "limit", Maybe.withDefault Encode.null (Maybe.map Encode.int model.limit) )
    , ( "orderBy", Maybe.withDefault Encode.null (Maybe.map Encode.string model.orderBy) )
    , ( "property", Maybe.withDefault Encode.null (Maybe.map (Encode.list Encode.string) model.property) )
    , ( "type", Maybe.withDefault Encode.null (Maybe.map Encode.string model.type_) )
    , ( "next", Maybe.withDefault Encode.null (Maybe.map Encode.int model.next) )
    , ( "prev", Maybe.withDefault Encode.null (Maybe.map Encode.int model.prev) )
    ]



toString : RequestedPageDetails -> String
toString =
    Encode.encode 0 << encode




