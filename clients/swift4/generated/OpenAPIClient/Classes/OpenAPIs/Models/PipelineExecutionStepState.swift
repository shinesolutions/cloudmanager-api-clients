//
// PipelineExecutionStepState.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Describes the status of a particular pipeline execution step for display purposes */
public struct PipelineExecutionStepState: Codable { 


    public enum Status: String, Codable {
        case notStarted = "NOT_STARTED"
        case running = "RUNNING"
        case finished = "FINISHED"
        case error = "ERROR"
        case rollingBack = "ROLLING_BACK"
        case rolledBack = "ROLLED_BACK"
        case waiting = "WAITING"
        case cancelled = "CANCELLED"
        case failed = "FAILED"
    }
    public var id: String?
    public var stepId: String?
    public var phaseId: String?
    /** Name of the action */
    public var action: String?
    /** Target repository */
    public var repository: String?
    /** Target branch */
    public var branch: String?
    /** Target environment */
    public var environment: String?
    /** Target environment type */
    public var environmentType: String?
    /** Start time */
    public var startedAt: Date?
    /** Date the execution reached a final state */
    public var finishedAt: Date?
    /** Information about step result */
    public var details: [String:Any]?
    /** Action status */
    public var status: Status?
    public var links: PipelineExecutionStepStateLinks?

    public init(id: String?, stepId: String?, phaseId: String?, action: String?, repository: String?, branch: String?, environment: String?, environmentType: String?, startedAt: Date?, finishedAt: Date?, details: [String:Any]?, status: Status?, links: PipelineExecutionStepStateLinks?) {
        self.id = id
        self.stepId = stepId
        self.phaseId = phaseId
        self.action = action
        self.repository = repository
        self.branch = branch
        self.environment = environment
        self.environmentType = environmentType
        self.startedAt = startedAt
        self.finishedAt = finishedAt
        self.details = details
        self.status = status
        self.links = links
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case stepId
        case phaseId
        case action
        case repository
        case branch
        case environment
        case environmentType
        case startedAt
        case finishedAt
        case details
        case status
        case links = "_links"
    }

}
