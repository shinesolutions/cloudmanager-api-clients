//
// Pipeline.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Describes a __CI/CD Pipeline__ */
public struct Pipeline: Codable { 


    public enum Trigger: String, Codable {
        case onCommit = "ON_COMMIT"
        case manual = "MANUAL"
        case schedule = "SCHEDULE"
    }
    public enum Status: String, Codable {
        case idle = "IDLE"
        case busy = "BUSY"
        case waiting = "WAITING"
    }
    /** Identifier of the pipeline. Unique within the program. */
    public var id: String?
    /** Identifier of the program. Unique within the space. */
    public var programId: String?
    /** Name of the pipeline */
    public var name: String
    /** How should the execution be triggered. ON_COMMIT: each time a PR is available and the Pipeline is idle then a execution is triggered. MANUAL: triggerd through UI or API. SCHEDULE: recurring schedule (not yet implemented} */
    public var trigger: Trigger?
    /** Pipeline status */
    public var status: Status?
    /** Create date */
    public var createdAt: Date?
    /** Update date */
    public var updatedAt: Date?
    /** Last pipeline execution start */
    public var lastStartedAt: Date?
    /** Last pipeline execution end */
    public var lastFinishedAt: Date?
    /** Pipeline phases in execution order */
    public var phases: [PipelinePhase]
    public var links: PipelineLinks?

    public init(id: String?, programId: String?, name: String, trigger: Trigger?, status: Status?, createdAt: Date?, updatedAt: Date?, lastStartedAt: Date?, lastFinishedAt: Date?, phases: [PipelinePhase], links: PipelineLinks?) {
        self.id = id
        self.programId = programId
        self.name = name
        self.trigger = trigger
        self.status = status
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.lastStartedAt = lastStartedAt
        self.lastFinishedAt = lastFinishedAt
        self.phases = phases
        self.links = links
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case programId
        case name
        case trigger
        case status
        case createdAt
        case updatedAt
        case lastStartedAt
        case lastFinishedAt
        case phases
        case links = "_links"
    }

}
