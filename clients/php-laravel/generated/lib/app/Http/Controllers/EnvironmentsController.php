<?php

/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class EnvironmentsController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation deleteEnvironment
     *
     * DeleteEnvironment.
     *
     * @param string $programId Identifier of the application (required)
     * @param string $environmentId Identifier of the environment (required)
     *
     * @return Http response
     */
    public function deleteEnvironment($programId, $environmentId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteEnvironment as a delete method ?');
    }
    /**
     * Operation getEnvironment
     *
     * Get Environment.
     *
     * @param string $programId Identifier of the program (required)
     * @param string $environmentId Identifier of the environment (required)
     *
     * @return Http response
     */
    public function getEnvironment($programId, $environmentId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getEnvironment as a get method ?');
    }
    /**
     * Operation getEnvironmentLogs
     *
     * Get Environment Logs.
     *
     * @param string $programId Identifier of the program (required)
     * @param string $environmentId Identifier of the environment (required)
     *
     * @return Http response
     */
    public function getEnvironmentLogs($programId, $environmentId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getEnvironmentLogs as a get method ?');
    }
    /**
     * Operation downloadLogs
     *
     * Download Logs.
     *
     * @param string $programId Identifier of the program (required)
     * @param string $environmentId Identifier of the environment (required)
     *
     * @return Http response
     */
    public function downloadLogs($programId, $environmentId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing downloadLogs as a get method ?');
    }
    /**
     * Operation getEnvironments
     *
     * List Environments.
     *
     * @param string $programId Identifier of the program (required)
     *
     * @return Http response
     */
    public function getEnvironments($programId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getEnvironments as a get method ?');
    }
}
