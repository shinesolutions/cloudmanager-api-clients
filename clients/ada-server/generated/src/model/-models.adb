--  Cloud Manager API
--  This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager_api_docs/master/swagger_specs/api.yaml.
--
--  The version of the OpenAPI document: 1.0.0
--  Contact: opensource@shinesolutions.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 4.3.1-SNAPSHOT.
--  https://openapi-generator.tech
--  Do not edit the class manually.


package body .Models is

   use Swagger.Streams;



   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Variable_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("value", Value.Value);
      Into.Write_Entity ("type", Value.P_Type);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Variable_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Variable_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "value", Value.Value);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Variable_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Variable_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in VariableListEmbedded_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "variables", Value.Variables);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in VariableListEmbedded_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out VariableListEmbedded_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "variables", Value.Variables);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out VariableListEmbedded_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : VariableListEmbedded_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InvalidParameter_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("reason", Value.Reason);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InvalidParameter_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InvalidParameter_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "reason", Value.Reason);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InvalidParameter_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : InvalidParameter_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RequestedPageDetails_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("start", Value.Start);
      Into.Write_Entity ("limit", Value.Limit);
      Into.Write_Entity ("orderBy", Value.Order_By);
      Serialize (Into, "property", Value.Property);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("next", Value.Next);
      Into.Write_Entity ("prev", Value.Prev);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RequestedPageDetails_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RequestedPageDetails_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "start", Value.Start);
      Swagger.Streams.Deserialize (Object, "limit", Value.Limit);
      Swagger.Streams.Deserialize (Object, "orderBy", Value.Order_By);
      Swagger.Streams.Deserialize (Object, "property", Value.Property);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "next", Value.Next);
      Swagger.Streams.Deserialize (Object, "prev", Value.Prev);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RequestedPageDetails_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : RequestedPageDetails_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmbeddedProgram_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("enabled", Value.Enabled);
      Into.Write_Entity ("tenantId", Value.Tenant_Id);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmbeddedProgram_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EmbeddedProgram_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "enabled", Value.Enabled);
      Swagger.Streams.Deserialize (Object, "tenantId", Value.Tenant_Id);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EmbeddedProgram_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EmbeddedProgram_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProgramListEmbedded_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "programs", Value.Programs);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProgramListEmbedded_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ProgramListEmbedded_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "programs", Value.Programs);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ProgramListEmbedded_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ProgramListEmbedded_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HalLink_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("href", Value.Href);
      Into.Write_Entity ("templated", Value.Templated);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("deprecation", Value.Deprecation);
      Into.Write_Entity ("profile", Value.Profile);
      Into.Write_Entity ("title", Value.Title);
      Into.Write_Entity ("hreflang", Value.Hreflang);
      Into.Write_Entity ("name", Value.Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HalLink_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out HalLink_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
      Swagger.Streams.Deserialize (Object, "templated", Value.Templated);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "deprecation", Value.Deprecation);
      Swagger.Streams.Deserialize (Object, "profile", Value.Profile);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "hreflang", Value.Hreflang);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out HalLink_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : HalLink_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in VariableListLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/environment", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Environment);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in VariableListLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out VariableListLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/environment", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Environment);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out VariableListLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : VariableListLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in VariableList_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_totalNumberOfItems", Value._total_Number_Of_Items);
      Serialize (Into, "_embedded", Value._embedded);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in VariableList_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out VariableList_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_totalNumberOfItems", Value._total_Number_Of_Items);
      Deserialize (Object, "_embedded", Value._embedded);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out VariableList_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : VariableList_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLogLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/logs/download", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Logs_Download);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/logs/tail", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Logs_Tail);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLogLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLogLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/logs/download", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Logs_Download);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/logs/tail", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Logs_Tail);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLogLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EnvironmentLogLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLog_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("service", Value.Service);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("date", Value.Date);
      Serialize (Into, "programId", Value.Program_Id);
      Serialize (Into, "environmentId", Value.Environment_Id);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLog_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLog_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "service", Value.Service);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "date", Value.Date);
      Swagger.Streams.Deserialize (Object, "programId", Value.Program_Id);
      Swagger.Streams.Deserialize (Object, "environmentId", Value.Environment_Id);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLog_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EnvironmentLog_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLogsEmbedded_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "downloads", Value.Downloads);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLogsEmbedded_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLogsEmbedded_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "downloads", Value.Downloads);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLogsEmbedded_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EnvironmentLogsEmbedded_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RepositoryBranchLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/repository", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Repository);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RepositoryBranchLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RepositoryBranchLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/repository", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Repository);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RepositoryBranchLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : RepositoryBranchLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RepositoryBranch_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("programId", Value.Program_Id);
      Serialize (Into, "repositoryId", Value.Repository_Id);
      Into.Write_Entity ("name", Value.Name);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RepositoryBranch_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RepositoryBranch_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "programId", Value.Program_Id);
      Swagger.Streams.Deserialize (Object, "repositoryId", Value.Repository_Id);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RepositoryBranch_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : RepositoryBranch_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BranchListEmbedded_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "branches", Value.Branches);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BranchListEmbedded_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BranchListEmbedded_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "branches", Value.Branches);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BranchListEmbedded_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : BranchListEmbedded_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RepositoryLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/branches", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Branches);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RepositoryLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RepositoryLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/branches", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Branches);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RepositoryLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : RepositoryLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Repository_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("repo", Value.Repo);
      Into.Write_Entity ("description", Value.Description);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Repository_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Repository_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "repo", Value.Repo);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Repository_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Repository_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RepositoryListEmbedded_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "repositories", Value.Repositories);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RepositoryListEmbedded_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RepositoryListEmbedded_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "repositories", Value.Repositories);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RepositoryListEmbedded_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : RepositoryListEmbedded_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/pipeline", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/pipeline", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineExecutionLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProgramLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/pipelines", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipelines);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/environments", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Environments);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/repositories", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Repositories);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProgramLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ProgramLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/pipelines", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipelines);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/environments", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Environments);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/repositories", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Repositories);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ProgramLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ProgramLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Program_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("enabled", Value.Enabled);
      Into.Write_Entity ("tenantId", Value.Tenant_Id);
      Into.Write_Entity ("imsOrgId", Value.Ims_Org_Id);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Program_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Program_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "enabled", Value.Enabled);
      Swagger.Streams.Deserialize (Object, "tenantId", Value.Tenant_Id);
      Swagger.Streams.Deserialize (Object, "imsOrgId", Value.Ims_Org_Id);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Program_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Program_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProgramListLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "next", Value.Next);
      Serialize (Into, "prev", Value.Prev);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProgramListLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ProgramListLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "next", Value.Next);
      Deserialize (Object, "prev", Value.Prev);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ProgramListLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ProgramListLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProgramList_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_totalNumberOfItems", Value._total_Number_Of_Items);
      Serialize (Into, "_embedded", Value._embedded);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProgramList_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ProgramList_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_totalNumberOfItems", Value._total_Number_Of_Items);
      Deserialize (Object, "_embedded", Value._embedded);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ProgramList_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ProgramList_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BranchList_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_totalNumberOfItems", Value._total_Number_Of_Items);
      Serialize (Into, "_embedded", Value._embedded);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BranchList_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BranchList_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_totalNumberOfItems", Value._total_Number_Of_Items);
      Deserialize (Object, "_embedded", Value._embedded);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BranchList_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : BranchList_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RepositoryList_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_totalNumberOfItems", Value._total_Number_Of_Items);
      Serialize (Into, "_embedded", Value._embedded);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RepositoryList_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RepositoryList_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_totalNumberOfItems", Value._total_Number_Of_Items);
      Deserialize (Object, "_embedded", Value._embedded);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out RepositoryList_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : RepositoryList_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/execution", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Execution);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/executions", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Executions);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/rollbackLastSuccessfulExecution", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Rollback_Last_Successful_Execution);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/execution", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Execution);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/executions", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Executions);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/rollbackLastSuccessfulExecution", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Rollback_Last_Successful_Execution);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionStepStateLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/execution", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Execution);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/pipeline", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/pipeline/logs", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline_Logs);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/pipeline/metrics", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline_Metrics);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/pipeline/advance", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline_Advance);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/pipeline/cancel", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline_Cancel);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionStepStateLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionStepStateLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/execution", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Execution);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/pipeline", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/pipeline/logs", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline_Logs);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/pipeline/metrics", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline_Metrics);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/pipeline/advance", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline_Advance);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/pipeline/cancel", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline_Cancel);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionStepStateLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineExecutionStepStateLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionListRepresentationLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "next", Value.Next);
      Serialize (Into, "page", Value.Page);
      Serialize (Into, "prev", Value.Prev);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionListRepresentationLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionListRepresentationLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "next", Value.Next);
      Deserialize (Object, "page", Value.Page);
      Deserialize (Object, "prev", Value.Prev);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionListRepresentationLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineExecutionListRepresentationLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/pipeline", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/author", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Author);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/publish", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Publish);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/developerConsole", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Developer_Console);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/logs", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Logs);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/variables", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Variables);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/pipeline", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Pipeline);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/author", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Author);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/publish", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Publish);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/developerConsole", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Developer_Console);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/logs", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Logs);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/variables", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Variables);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EnvironmentLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Environment_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("programId", Value.Program_Id);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("description", Value.Description);
      Into.Write_Entity ("type", Value.P_Type);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Environment_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Environment_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "programId", Value.Program_Id);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Environment_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Environment_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentListEmbedded_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "environments", Value.Environments);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentListEmbedded_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentListEmbedded_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "environments", Value.Environments);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentListEmbedded_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EnvironmentListEmbedded_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentList_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_totalNumberOfItems", Value._total_Number_Of_Items);
      Serialize (Into, "_embedded", Value._embedded);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentList_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentList_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_totalNumberOfItems", Value._total_Number_Of_Items);
      Deserialize (Object, "_embedded", Value._embedded);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentList_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EnvironmentList_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLogsLinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Serialize (Into, "self", Value.Self);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLogsLinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLogsLinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "http://ns.adobe.com/adobecloud/rel/program", Value.Http__ns_Adobe_Com_Adobecloud_Rel_Program);
      Deserialize (Object, "self", Value.Self);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLogsLinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EnvironmentLogsLinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLogs_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "service", Value.Service);
      Serialize (Into, "name", Value.Name);
      Into.Write_Entity ("days", Value.Days);
      Serialize (Into, "_links", Value._links);
      Serialize (Into, "_embedded", Value._embedded);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnvironmentLogs_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLogs_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "service", Value.Service);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "days", Value.Days);
      Deserialize (Object, "_links", Value._links);
      Deserialize (Object, "_embedded", Value._embedded);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EnvironmentLogs_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EnvironmentLogs_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelinePhase_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("repositoryId", Value.Repository_Id);
      Into.Write_Entity ("branch", Value.Branch);
      Into.Write_Entity ("environmentId", Value.Environment_Id);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelinePhase_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelinePhase_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "repositoryId", Value.Repository_Id);
      Swagger.Streams.Deserialize (Object, "branch", Value.Branch);
      Swagger.Streams.Deserialize (Object, "environmentId", Value.Environment_Id);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelinePhase_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelinePhase_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Metric_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("severity", Value.Severity);
      Into.Write_Entity ("passed", Value.Passed);
      Into.Write_Entity ("override", Value.Override);
      Into.Write_Entity ("actualValue", Value.Actual_Value);
      Into.Write_Entity ("expectedValue", Value.Expected_Value);
      Into.Write_Entity ("comparator", Value.Comparator);
      Into.Write_Entity ("kpi", Value.Kpi);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Metric_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Metric_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "severity", Value.Severity);
      Swagger.Streams.Deserialize (Object, "passed", Value.Passed);
      Swagger.Streams.Deserialize (Object, "override", Value.Override);
      Swagger.Streams.Deserialize (Object, "actualValue", Value.Actual_Value);
      Swagger.Streams.Deserialize (Object, "expectedValue", Value.Expected_Value);
      Swagger.Streams.Deserialize (Object, "comparator", Value.Comparator);
      Swagger.Streams.Deserialize (Object, "kpi", Value.Kpi);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Metric_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Metric_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineStepMetrics_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "metrics", Value.Metrics);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineStepMetrics_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineStepMetrics_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "metrics", Value.Metrics);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineStepMetrics_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineStepMetrics_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MissingParameter_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("type", Value.P_Type);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MissingParameter_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MissingParameter_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MissingParameter_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : MissingParameter_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BadRequestError_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("status", Value.Status);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("title", Value.Title);
      Serialize (Into, "missingParams", Value.Missing_Params);
      Serialize (Into, "invalidParams", Value.Invalid_Params);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BadRequestError_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BadRequestError_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Deserialize (Object, "missingParams", Value.Missing_Params);
      Deserialize (Object, "invalidParams", Value.Invalid_Params);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BadRequestError_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : BadRequestError_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Pipeline_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("programId", Value.Program_Id);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("trigger", Value.Trigger);
      Into.Write_Entity ("status", Value.Status);
      Into.Write_Entity ("createdAt", Value.Created_At);
      Into.Write_Entity ("updatedAt", Value.Updated_At);
      Into.Write_Entity ("lastStartedAt", Value.Last_Started_At);
      Into.Write_Entity ("lastFinishedAt", Value.Last_Finished_At);
      Serialize (Into, "phases", Value.Phases);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Pipeline_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Pipeline_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "programId", Value.Program_Id);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "trigger", Value.Trigger);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Deserialize (Object, "createdAt", Value.Created_At);
      Deserialize (Object, "updatedAt", Value.Updated_At);
      Deserialize (Object, "lastStartedAt", Value.Last_Started_At);
      Deserialize (Object, "lastFinishedAt", Value.Last_Finished_At);
      Deserialize (Object, "phases", Value.Phases);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Pipeline_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Pipeline_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineList_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_totalNumberOfItems", Value._total_Number_Of_Items);
      Serialize (Into, "_embedded", Value._embedded);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineList_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineList_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_totalNumberOfItems", Value._total_Number_Of_Items);
      Deserialize (Object, "_embedded", Value._embedded);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineList_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineList_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecution_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("programId", Value.Program_Id);
      Into.Write_Entity ("pipelineId", Value.Pipeline_Id);
      Into.Write_Entity ("artifactsVersion", Value.Artifacts_Version);
      Into.Write_Entity ("user", Value.User);
      Into.Write_Entity ("status", Value.Status);
      Into.Write_Entity ("trigger", Value.Trigger);
      Into.Write_Entity ("createdAt", Value.Created_At);
      Into.Write_Entity ("updatedAt", Value.Updated_At);
      Into.Write_Entity ("finishedAt", Value.Finished_At);
      Serialize (Into, "_embedded", Value._embedded);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecution_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecution_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "programId", Value.Program_Id);
      Swagger.Streams.Deserialize (Object, "pipelineId", Value.Pipeline_Id);
      Swagger.Streams.Deserialize (Object, "artifactsVersion", Value.Artifacts_Version);
      Swagger.Streams.Deserialize (Object, "user", Value.User);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Swagger.Streams.Deserialize (Object, "trigger", Value.Trigger);
      Deserialize (Object, "createdAt", Value.Created_At);
      Deserialize (Object, "updatedAt", Value.Updated_At);
      Deserialize (Object, "finishedAt", Value.Finished_At);
      Deserialize (Object, "_embedded", Value._embedded);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecution_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineExecution_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionStepState_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("stepId", Value.Step_Id);
      Into.Write_Entity ("phaseId", Value.Phase_Id);
      Into.Write_Entity ("action", Value.Action);
      Into.Write_Entity ("repository", Value.Repository);
      Into.Write_Entity ("branch", Value.Branch);
      Into.Write_Entity ("environment", Value.Environment);
      Into.Write_Entity ("environmentType", Value.Environment_Type);
      Into.Write_Entity ("startedAt", Value.Started_At);
      Into.Write_Entity ("finishedAt", Value.Finished_At);
      Serialize (Into, "details", Value.Details);
      Into.Write_Entity ("status", Value.Status);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionStepState_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionStepState_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "stepId", Value.Step_Id);
      Swagger.Streams.Deserialize (Object, "phaseId", Value.Phase_Id);
      Swagger.Streams.Deserialize (Object, "action", Value.Action);
      Swagger.Streams.Deserialize (Object, "repository", Value.Repository);
      Swagger.Streams.Deserialize (Object, "branch", Value.Branch);
      Swagger.Streams.Deserialize (Object, "environment", Value.Environment);
      Swagger.Streams.Deserialize (Object, "environmentType", Value.Environment_Type);
      Deserialize (Object, "startedAt", Value.Started_At);
      Deserialize (Object, "finishedAt", Value.Finished_At);
      Deserialize (Object, "details", Value.Details);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionStepState_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineExecutionStepState_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionListRepresentation_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_totalNumberOfItems", Value._total_Number_Of_Items);
      Serialize (Into, "_page", Value._page);
      Serialize (Into, "_embedded", Value._embedded);
      Serialize (Into, "_links", Value._links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionListRepresentation_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionListRepresentation_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_totalNumberOfItems", Value._total_Number_Of_Items);
      Deserialize (Object, "_page", Value._page);
      Deserialize (Object, "_embedded", Value._embedded);
      Deserialize (Object, "_links", Value._links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionListRepresentation_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineExecutionListRepresentation_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineListEmbedded_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "pipelines", Value.Pipelines);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineListEmbedded_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineListEmbedded_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "pipelines", Value.Pipelines);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineListEmbedded_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineListEmbedded_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionEmbedded_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "stepStates", Value.Step_States);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionEmbedded_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionEmbedded_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "stepStates", Value.Step_States);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionEmbedded_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineExecutionEmbedded_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionListRepresentationEmbedded_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "executions", Value.Executions);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineExecutionListRepresentationEmbedded_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionListRepresentationEmbedded_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "executions", Value.Executions);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineExecutionListRepresentationEmbedded_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineExecutionListRepresentationEmbedded_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;



end .Models;
