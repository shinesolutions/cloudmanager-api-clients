/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.openapitools.api;

import org.openapitools.model.BadRequestError;
import org.openapitools.model.Environment;
import org.openapitools.model.EnvironmentList;
import org.openapitools.model.EnvironmentLogs;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * Cloud Manager API
 *
 * <p>This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * API tests for EnvironmentsApi 
 */
public class EnvironmentsApiTest {


    private EnvironmentsApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("https://cloudmanager.adobe.io", EnvironmentsApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * DeleteEnvironment
     *
     * Delete environment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteEnvironmentTest() {
        String programId = null;
        String environmentId = null;
        String xGwImsOrgId = null;
        String authorization = null;
        String xApiKey = null;
        //Environment response = api.deleteEnvironment(programId, environmentId, xGwImsOrgId, authorization, xApiKey);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Download Logs
     *
     * Download environment logs
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void downloadLogsTest() {
        String programId = null;
        String environmentId = null;
        String service = null;
        String name = null;
        String date = null;
        String xGwImsOrgId = null;
        String authorization = null;
        String xApiKey = null;
        String accept = null;
        //api.downloadLogs(programId, environmentId, service, name, date, xGwImsOrgId, authorization, xApiKey, accept);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Get Environment
     *
     * Returns an environment by its id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEnvironmentTest() {
        String programId = null;
        String environmentId = null;
        String xGwImsOrgId = null;
        String authorization = null;
        String xApiKey = null;
        //Environment response = api.getEnvironment(programId, environmentId, xGwImsOrgId, authorization, xApiKey);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Get Environment Logs
     *
     * List all logs available in environment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEnvironmentLogsTest() {
        String programId = null;
        String environmentId = null;
        Integer days = null;
        String xGwImsOrgId = null;
        String authorization = null;
        String xApiKey = null;
        List<String> service = null;
        List<String> name = null;
        //EnvironmentLogs response = api.getEnvironmentLogs(programId, environmentId, days, xGwImsOrgId, authorization, xApiKey, service, name);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * List Environments
     *
     * Lists all environments in an program
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEnvironmentsTest() {
        String programId = null;
        String xGwImsOrgId = null;
        String authorization = null;
        String xApiKey = null;
        String type = null;
        //EnvironmentList response = api.getEnvironments(programId, xGwImsOrgId, authorization, xApiKey, type);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
}
