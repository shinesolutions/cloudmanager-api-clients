/**
* Cloud Manager API
* This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
*
* The version of the OpenAPI document: 1.0.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models


import com.squareup.moshi.Json
/**
 * Describes a __Metric__
 * @param id KPI result identifier
 * @param severity Severity of the metric
 * @param passed Whether metric is considered passed
 * @param override Whether user override the failed metric
 * @param actualValue Expected value for the metric
 * @param expectedValue Expected value for the metric
 * @param comparator Comparator used for the metric
 * @param kpi KPI identifier
 */

data class Metric (
    /* KPI result identifier */
    @Json(name = "id")
    val id: kotlin.String? = null,
    /* Severity of the metric */
    @Json(name = "severity")
    val severity: Metric.Severity? = null,
    /* Whether metric is considered passed */
    @Json(name = "passed")
    val passed: kotlin.Boolean? = null,
    /* Whether user override the failed metric */
    @Json(name = "override")
    val override: kotlin.Boolean? = null,
    /* Expected value for the metric */
    @Json(name = "actualValue")
    val actualValue: kotlin.String? = null,
    /* Expected value for the metric */
    @Json(name = "expectedValue")
    val expectedValue: kotlin.String? = null,
    /* Comparator used for the metric */
    @Json(name = "comparator")
    val comparator: Metric.Comparator? = null,
    /* KPI identifier */
    @Json(name = "kpi")
    val kpi: kotlin.String? = null
) {

    /**
    * Severity of the metric
    * Values: critical,important,informational
    */
    
    enum class Severity(val value: kotlin.String){
        @Json(name = "critical") critical("critical"),
        @Json(name = "important") important("important"),
        @Json(name = "informational") informational("informational");
    }
    /**
    * Comparator used for the metric
    * Values: gT,gTE,lT,lTE,eQ,nEQ
    */
    
    enum class Comparator(val value: kotlin.String){
        @Json(name = "GT") gT("GT"),
        @Json(name = "GTE") gTE("GTE"),
        @Json(name = "LT") lT("LT"),
        @Json(name = "LTE") lTE("LTE"),
        @Json(name = "EQ") eQ("EQ"),
        @Json(name = "NEQ") nEQ("NEQ");
    }
}

