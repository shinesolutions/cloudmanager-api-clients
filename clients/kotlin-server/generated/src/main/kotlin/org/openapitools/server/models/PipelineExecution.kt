/**
* Cloud Manager API
* This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
*
* The version of the OpenAPI document: 1.0.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.models

import org.openapitools.server.models.PipelineExecutionEmbedded
import org.openapitools.server.models.PipelineExecutionLinks

/**
 * Wraps a pipeline execution
 * @param id Pipeline execution identifier
 * @param programId Identifier of the program. Unique within the space.
 * @param pipelineId Identifier of the pipeline. Unique within the space.
 * @param artifactsVersion Version of the artifacts generated during this execution
 * @param user AdobeID who started the pipeline. Empty for auto triggered builds
 * @param status Status of the execution
 * @param trigger How the execution was triggered.
 * @param createdAt Start time
 * @param updatedAt Date of last status change
 * @param finishedAt Date the execution reached a final state
 * @param embedded 
 * @param links 
 */
data class PipelineExecution (
    /* Pipeline execution identifier */
    val id: kotlin.String? = null,
    /* Identifier of the program. Unique within the space. */
    val programId: kotlin.String? = null,
    /* Identifier of the pipeline. Unique within the space. */
    val pipelineId: kotlin.String? = null,
    /* Version of the artifacts generated during this execution */
    val artifactsVersion: kotlin.String? = null,
    /* AdobeID who started the pipeline. Empty for auto triggered builds */
    val user: kotlin.String? = null,
    /* Status of the execution */
    val status: PipelineExecution.Status? = null,
    /* How the execution was triggered. */
    val trigger: PipelineExecution.Trigger? = null,
    /* Start time */
    val createdAt: java.time.LocalDateTime? = null,
    /* Date of last status change */
    val updatedAt: java.time.LocalDateTime? = null,
    /* Date the execution reached a final state */
    val finishedAt: java.time.LocalDateTime? = null,
    val embedded: PipelineExecutionEmbedded? = null,
    val links: PipelineExecutionLinks? = null
) 
{
    /**
    * Status of the execution
    * Values: nOTSTARTED,rUNNING,cANCELLING,cANCELLED,fINISHED,eRROR,fAILED
    */
    enum class Status(val value: kotlin.String){
        nOTSTARTED("NOT_STARTED"),
        rUNNING("RUNNING"),
        cANCELLING("CANCELLING"),
        cANCELLED("CANCELLED"),
        fINISHED("FINISHED"),
        eRROR("ERROR"),
        fAILED("FAILED");
    }
    /**
    * How the execution was triggered.
    * Values: oNCOMMIT,mANUAL,sCHEDULE,pUSHUPGRADES
    */
    enum class Trigger(val value: kotlin.String){
        oNCOMMIT("ON_COMMIT"),
        mANUAL("MANUAL"),
        sCHEDULE("SCHEDULE"),
        pUSHUPGRADES("PUSH_UPGRADES");
    }
}

