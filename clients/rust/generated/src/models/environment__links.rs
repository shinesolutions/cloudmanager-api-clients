/*
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentLinks {
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/program", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_program: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/pipeline", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_pipeline: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/author", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_author: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/publish", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_publish: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/developerConsole", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_developer_console: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/logs", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_logs: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/variables", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_variables: Option<crate::models::HalLink>,
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub _self: Option<crate::models::HalLink>,
}

impl EnvironmentLinks {
    pub fn new() -> EnvironmentLinks {
        EnvironmentLinks {
            http__ns_adobe_com_adobecloud_rel_program: None,
            http__ns_adobe_com_adobecloud_rel_pipeline: None,
            http__ns_adobe_com_adobecloud_rel_author: None,
            http__ns_adobe_com_adobecloud_rel_publish: None,
            http__ns_adobe_com_adobecloud_rel_developer_console: None,
            http__ns_adobe_com_adobecloud_rel_logs: None,
            http__ns_adobe_com_adobecloud_rel_variables: None,
            _self: None,
        }
    }
}


