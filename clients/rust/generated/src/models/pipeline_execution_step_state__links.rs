/*
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PipelineExecutionStepStateLinks {
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/execution", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_execution: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/pipeline", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_pipeline: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/pipeline/logs", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_pipeline_logs: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/pipeline/metrics", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_pipeline_metrics: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/pipeline/advance", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_pipeline_advance: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/pipeline/cancel", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_pipeline_cancel: Option<crate::models::HalLink>,
    #[serde(rename = "http://ns.adobe.com/adobecloud/rel/program", skip_serializing_if = "Option::is_none")]
    pub http__ns_adobe_com_adobecloud_rel_program: Option<crate::models::HalLink>,
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub _self: Option<crate::models::HalLink>,
}

impl PipelineExecutionStepStateLinks {
    pub fn new() -> PipelineExecutionStepStateLinks {
        PipelineExecutionStepStateLinks {
            http__ns_adobe_com_adobecloud_rel_execution: None,
            http__ns_adobe_com_adobecloud_rel_pipeline: None,
            http__ns_adobe_com_adobecloud_rel_pipeline_logs: None,
            http__ns_adobe_com_adobecloud_rel_pipeline_metrics: None,
            http__ns_adobe_com_adobecloud_rel_pipeline_advance: None,
            http__ns_adobe_com_adobecloud_rel_pipeline_cancel: None,
            http__ns_adobe_com_adobecloud_rel_program: None,
            _self: None,
        }
    }
}


