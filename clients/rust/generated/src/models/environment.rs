/*
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

/// Environment : An Environment that 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Environment {
    /// id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Identifier of the program. Unique within the space.
    #[serde(rename = "programId", skip_serializing_if = "Option::is_none")]
    pub program_id: Option<String>,
    /// Name of the environment
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Description of the environment
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Type of the environment
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<crate::models::EnvironmentLinks>,
}

impl Environment {
    /// An Environment that 
    pub fn new() -> Environment {
        Environment {
            id: None,
            program_id: None,
            name: None,
            description: None,
            _type: None,
            _links: None,
        }
    }
}

/// Type of the environment
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "dev")]
    Dev,
    #[serde(rename = "stage")]
    Stage,
    #[serde(rename = "prod")]
    Prod,
}

