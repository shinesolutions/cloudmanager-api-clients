/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * HalLink.h
 *
 * 
 */

#ifndef HalLink_H_
#define HalLink_H_



#include <string>
#include <memory>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  HalLink 
{
public:
    HalLink();
    virtual ~HalLink();
    
    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// HalLink members

    /// <summary>
    /// 
    /// </summary>
    std::string getHref() const;
    void setHref(std::string value);

    /// <summary>
    /// 
    /// </summary>
    bool isTemplated() const;
    void setTemplated(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::string getType() const;
    void setType(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getDeprecation() const;
    void setDeprecation(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getProfile() const;
    void setProfile(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getTitle() const;
    void setTitle(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getHreflang() const;
    void setHreflang(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getName() const;
    void setName(std::string value);
protected:
    std::string m_Href;
    bool m_Templated;
    std::string m_Type;
    std::string m_Deprecation;
    std::string m_Profile;
    std::string m_Title;
    std::string m_Hreflang;
    std::string m_Name;
};

}
}
}
}

#endif /* HalLink_H_ */
