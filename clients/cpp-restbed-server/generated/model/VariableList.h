/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * VariableList.h
 *
 * 
 */

#ifndef VariableList_H_
#define VariableList_H_



#include "VariableList__links.h"
#include "VariableList__embedded.h"
#include <memory>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  VariableList 
{
public:
    VariableList();
    virtual ~VariableList();
    
    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// VariableList members

    /// <summary>
    /// 
    /// </summary>
    int32_t get_TotalNumberOfItems() const;
    void set_TotalNumberOfItems(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<VariableList__embedded> get_Embedded() const;
    void set_Embedded(std::shared_ptr<VariableList__embedded> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<VariableList__links> get_Links() const;
    void set_Links(std::shared_ptr<VariableList__links> value);
protected:
    int32_t m__totalNumberOfItems;
    std::shared_ptr<VariableList__embedded> m__embedded;
    std::shared_ptr<VariableList__links> m__links;
};

}
}
}
}

#endif /* VariableList_H_ */
