/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Program.h
 *
 * Describes a __Program__
 */

#ifndef Program_H_
#define Program_H_



#include <string>
#include "Program__links.h"
#include <memory>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Describes a __Program__
/// </summary>
class  Program 
{
public:
    Program();
    virtual ~Program();
    
    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// Program members

    /// <summary>
    /// Identifier of the program. Unique within the space.
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// Name of the program
    /// </summary>
    std::string getName() const;
    void setName(std::string value);

    /// <summary>
    /// Whether this Program has been enabled for Cloud Manager usage
    /// </summary>
    bool isEnabled() const;
    void setEnabled(bool value);

    /// <summary>
    /// Tenant Id
    /// </summary>
    std::string getTenantId() const;
    void setTenantId(std::string value);

    /// <summary>
    /// Organisation Id
    /// </summary>
    std::string getImsOrgId() const;
    void setImsOrgId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Program__links> get_Links() const;
    void set_Links(std::shared_ptr<Program__links> value);
protected:
    std::string m_Id;
    std::string m_Name;
    bool m_Enabled;
    std::string m_TenantId;
    std::string m_ImsOrgId;
    std::shared_ptr<Program__links> m__links;
};

}
}
}
}

#endif /* Program_H_ */
