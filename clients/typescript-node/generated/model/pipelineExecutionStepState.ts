/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { PipelineExecutionStepStateLinks } from './pipelineExecutionStepStateLinks';

/**
* Describes the status of a particular pipeline execution step for display purposes
*/
export class PipelineExecutionStepState {
    'id'?: string;
    'stepId'?: string;
    'phaseId'?: string;
    /**
    * Name of the action
    */
    'action'?: string;
    /**
    * Target repository
    */
    'repository'?: string;
    /**
    * Target branch
    */
    'branch'?: string;
    /**
    * Target environment
    */
    'environment'?: string;
    /**
    * Target environment type
    */
    'environmentType'?: string;
    /**
    * Start time
    */
    'startedAt'?: Date;
    /**
    * Date the execution reached a final state
    */
    'finishedAt'?: Date;
    /**
    * Information about step result
    */
    'details'?: { [key: string]: object; };
    /**
    * Action status
    */
    'status'?: PipelineExecutionStepState.StatusEnum;
    'links'?: PipelineExecutionStepStateLinks;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "stepId",
            "baseName": "stepId",
            "type": "string"
        },
        {
            "name": "phaseId",
            "baseName": "phaseId",
            "type": "string"
        },
        {
            "name": "action",
            "baseName": "action",
            "type": "string"
        },
        {
            "name": "repository",
            "baseName": "repository",
            "type": "string"
        },
        {
            "name": "branch",
            "baseName": "branch",
            "type": "string"
        },
        {
            "name": "environment",
            "baseName": "environment",
            "type": "string"
        },
        {
            "name": "environmentType",
            "baseName": "environmentType",
            "type": "string"
        },
        {
            "name": "startedAt",
            "baseName": "startedAt",
            "type": "Date"
        },
        {
            "name": "finishedAt",
            "baseName": "finishedAt",
            "type": "Date"
        },
        {
            "name": "details",
            "baseName": "details",
            "type": "{ [key: string]: object; }"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "PipelineExecutionStepState.StatusEnum"
        },
        {
            "name": "links",
            "baseName": "_links",
            "type": "PipelineExecutionStepStateLinks"
        }    ];

    static getAttributeTypeMap() {
        return PipelineExecutionStepState.attributeTypeMap;
    }
}

export namespace PipelineExecutionStepState {
    export enum StatusEnum {
        NOTSTARTED = <any> 'NOT_STARTED',
        RUNNING = <any> 'RUNNING',
        FINISHED = <any> 'FINISHED',
        ERROR = <any> 'ERROR',
        ROLLINGBACK = <any> 'ROLLING_BACK',
        ROLLEDBACK = <any> 'ROLLED_BACK',
        WAITING = <any> 'WAITING',
        CANCELLED = <any> 'CANCELLED',
        FAILED = <any> 'FAILED'
    }
}
