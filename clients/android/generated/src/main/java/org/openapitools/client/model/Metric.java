/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Describes a __Metric__
 **/
@ApiModel(description = "Describes a __Metric__")
public class Metric {
  
  @SerializedName("id")
  private String id = null;
  public enum SeverityEnum {
     critical,  important,  informational, 
  };
  @SerializedName("severity")
  private SeverityEnum severity = null;
  @SerializedName("passed")
  private Boolean passed = false;
  @SerializedName("override")
  private Boolean override = false;
  @SerializedName("actualValue")
  private String actualValue = null;
  @SerializedName("expectedValue")
  private String expectedValue = null;
  public enum ComparatorEnum {
     GT,  GTE,  LT,  LTE,  EQ,  NEQ, 
  };
  @SerializedName("comparator")
  private ComparatorEnum comparator = null;
  @SerializedName("kpi")
  private String kpi = null;

  /**
   * KPI result identifier
   **/
  @ApiModelProperty(value = "KPI result identifier")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Severity of the metric
   **/
  @ApiModelProperty(value = "Severity of the metric")
  public SeverityEnum getSeverity() {
    return severity;
  }
  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }

  /**
   * Whether metric is considered passed
   **/
  @ApiModelProperty(value = "Whether metric is considered passed")
  public Boolean getPassed() {
    return passed;
  }
  public void setPassed(Boolean passed) {
    this.passed = passed;
  }

  /**
   * Whether user override the failed metric
   **/
  @ApiModelProperty(value = "Whether user override the failed metric")
  public Boolean getOverride() {
    return override;
  }
  public void setOverride(Boolean override) {
    this.override = override;
  }

  /**
   * Expected value for the metric
   **/
  @ApiModelProperty(value = "Expected value for the metric")
  public String getActualValue() {
    return actualValue;
  }
  public void setActualValue(String actualValue) {
    this.actualValue = actualValue;
  }

  /**
   * Expected value for the metric
   **/
  @ApiModelProperty(value = "Expected value for the metric")
  public String getExpectedValue() {
    return expectedValue;
  }
  public void setExpectedValue(String expectedValue) {
    this.expectedValue = expectedValue;
  }

  /**
   * Comparator used for the metric
   **/
  @ApiModelProperty(value = "Comparator used for the metric")
  public ComparatorEnum getComparator() {
    return comparator;
  }
  public void setComparator(ComparatorEnum comparator) {
    this.comparator = comparator;
  }

  /**
   * KPI identifier
   **/
  @ApiModelProperty(value = "KPI identifier")
  public String getKpi() {
    return kpi;
  }
  public void setKpi(String kpi) {
    this.kpi = kpi;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metric metric = (Metric) o;
    return (this.id == null ? metric.id == null : this.id.equals(metric.id)) &&
        (this.severity == null ? metric.severity == null : this.severity.equals(metric.severity)) &&
        (this.passed == null ? metric.passed == null : this.passed.equals(metric.passed)) &&
        (this.override == null ? metric.override == null : this.override.equals(metric.override)) &&
        (this.actualValue == null ? metric.actualValue == null : this.actualValue.equals(metric.actualValue)) &&
        (this.expectedValue == null ? metric.expectedValue == null : this.expectedValue.equals(metric.expectedValue)) &&
        (this.comparator == null ? metric.comparator == null : this.comparator.equals(metric.comparator)) &&
        (this.kpi == null ? metric.kpi == null : this.kpi.equals(metric.kpi));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.severity == null ? 0: this.severity.hashCode());
    result = 31 * result + (this.passed == null ? 0: this.passed.hashCode());
    result = 31 * result + (this.override == null ? 0: this.override.hashCode());
    result = 31 * result + (this.actualValue == null ? 0: this.actualValue.hashCode());
    result = 31 * result + (this.expectedValue == null ? 0: this.expectedValue.hashCode());
    result = 31 * result + (this.comparator == null ? 0: this.comparator.hashCode());
    result = 31 * result + (this.kpi == null ? 0: this.kpi.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metric {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  severity: ").append(severity).append("\n");
    sb.append("  passed: ").append(passed).append("\n");
    sb.append("  override: ").append(override).append("\n");
    sb.append("  actualValue: ").append(actualValue).append("\n");
    sb.append("  expectedValue: ").append(expectedValue).append("\n");
    sb.append("  comparator: ").append(comparator).append("\n");
    sb.append("  kpi: ").append(kpi).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
