/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Describes an __Embedded Program__
 **/
@ApiModel(description = "Describes an __Embedded Program__")
public class EmbeddedProgram {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("enabled")
  private Boolean enabled = false;
  @SerializedName("tenantId")
  private String tenantId = null;

  /**
   * Identifier of the program. Unique within the space.
   **/
  @ApiModelProperty(value = "Identifier of the program. Unique within the space.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Name of the program
   **/
  @ApiModelProperty(value = "Name of the program")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Whether this Program has been enabled for Cloud Manager usage
   **/
  @ApiModelProperty(value = "Whether this Program has been enabled for Cloud Manager usage")
  public Boolean getEnabled() {
    return enabled;
  }
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  /**
   * Tenant Id
   **/
  @ApiModelProperty(value = "Tenant Id")
  public String getTenantId() {
    return tenantId;
  }
  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmbeddedProgram embeddedProgram = (EmbeddedProgram) o;
    return (this.id == null ? embeddedProgram.id == null : this.id.equals(embeddedProgram.id)) &&
        (this.name == null ? embeddedProgram.name == null : this.name.equals(embeddedProgram.name)) &&
        (this.enabled == null ? embeddedProgram.enabled == null : this.enabled.equals(embeddedProgram.enabled)) &&
        (this.tenantId == null ? embeddedProgram.tenantId == null : this.tenantId.equals(embeddedProgram.tenantId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.enabled == null ? 0: this.enabled.hashCode());
    result = 31 * result + (this.tenantId == null ? 0: this.tenantId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmbeddedProgram {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  enabled: ").append(enabled).append("\n");
    sb.append("  tenantId: ").append(tenantId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
