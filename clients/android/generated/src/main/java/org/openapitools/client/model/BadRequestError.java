/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.InvalidParameter;
import org.openapitools.client.model.MissingParameter;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * A Bad Request response error.
 **/
@ApiModel(description = "A Bad Request response error.")
public class BadRequestError {
  
  @SerializedName("status")
  private Integer status = null;
  @SerializedName("type")
  private String type = null;
  @SerializedName("title")
  private String title = null;
  @SerializedName("missingParams")
  private List<MissingParameter> missingParams = null;
  @SerializedName("invalidParams")
  private List<InvalidParameter> invalidParams = null;

  /**
   * HTTP status code of the response.
   **/
  @ApiModelProperty(value = "HTTP status code of the response.")
  public Integer getStatus() {
    return status;
  }
  public void setStatus(Integer status) {
    this.status = status;
  }

  /**
   * Error type identifier.
   **/
  @ApiModelProperty(value = "Error type identifier.")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * A short summary of the error.
   **/
  @ApiModelProperty(value = "A short summary of the error.")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  /**
   * Request's missing parameters.
   **/
  @ApiModelProperty(value = "Request's missing parameters.")
  public List<MissingParameter> getMissingParams() {
    return missingParams;
  }
  public void setMissingParams(List<MissingParameter> missingParams) {
    this.missingParams = missingParams;
  }

  /**
   * Request's invalid parameters.
   **/
  @ApiModelProperty(value = "Request's invalid parameters.")
  public List<InvalidParameter> getInvalidParams() {
    return invalidParams;
  }
  public void setInvalidParams(List<InvalidParameter> invalidParams) {
    this.invalidParams = invalidParams;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BadRequestError badRequestError = (BadRequestError) o;
    return (this.status == null ? badRequestError.status == null : this.status.equals(badRequestError.status)) &&
        (this.type == null ? badRequestError.type == null : this.type.equals(badRequestError.type)) &&
        (this.title == null ? badRequestError.title == null : this.title.equals(badRequestError.title)) &&
        (this.missingParams == null ? badRequestError.missingParams == null : this.missingParams.equals(badRequestError.missingParams)) &&
        (this.invalidParams == null ? badRequestError.invalidParams == null : this.invalidParams.equals(badRequestError.invalidParams));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    result = 31 * result + (this.missingParams == null ? 0: this.missingParams.hashCode());
    result = 31 * result + (this.invalidParams == null ? 0: this.invalidParams.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BadRequestError {\n");
    
    sb.append("  status: ").append(status).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  title: ").append(title).append("\n");
    sb.append("  missingParams: ").append(missingParams).append("\n");
    sb.append("  invalidParams: ").append(invalidParams).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
