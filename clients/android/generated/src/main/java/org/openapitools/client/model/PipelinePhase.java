/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Describes a phase of a pipeline
 **/
@ApiModel(description = "Describes a phase of a pipeline")
public class PipelinePhase {
  
  @SerializedName("name")
  private String name = null;
  public enum TypeEnum {
     VALIDATE,  BUILD,  DEPLOY, 
  };
  @SerializedName("type")
  private TypeEnum type = null;
  @SerializedName("repositoryId")
  private String repositoryId = null;
  @SerializedName("branch")
  private String branch = null;
  @SerializedName("environmentId")
  private String environmentId = null;

  /**
   * Name of the phase
   **/
  @ApiModelProperty(value = "Name of the phase")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Type of the phase
   **/
  @ApiModelProperty(required = true, value = "Type of the phase")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   * Identifier of the source repository. The code from this repository will be build at the start of this phase. Mandatory if type=BUILD
   **/
  @ApiModelProperty(value = "Identifier of the source repository. The code from this repository will be build at the start of this phase. Mandatory if type=BUILD")
  public String getRepositoryId() {
    return repositoryId;
  }
  public void setRepositoryId(String repositoryId) {
    this.repositoryId = repositoryId;
  }

  /**
   * Name of the tracked branch or a fully qualified git tag (e.g. refs/tags/v1).  Assumed to be `master` if missing.
   **/
  @ApiModelProperty(value = "Name of the tracked branch or a fully qualified git tag (e.g. refs/tags/v1).  Assumed to be `master` if missing.")
  public String getBranch() {
    return branch;
  }
  public void setBranch(String branch) {
    this.branch = branch;
  }

  /**
   * Identifier of the target environment. Mandatory if type=DEPLOY
   **/
  @ApiModelProperty(value = "Identifier of the target environment. Mandatory if type=DEPLOY")
  public String getEnvironmentId() {
    return environmentId;
  }
  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelinePhase pipelinePhase = (PipelinePhase) o;
    return (this.name == null ? pipelinePhase.name == null : this.name.equals(pipelinePhase.name)) &&
        (this.type == null ? pipelinePhase.type == null : this.type.equals(pipelinePhase.type)) &&
        (this.repositoryId == null ? pipelinePhase.repositoryId == null : this.repositoryId.equals(pipelinePhase.repositoryId)) &&
        (this.branch == null ? pipelinePhase.branch == null : this.branch.equals(pipelinePhase.branch)) &&
        (this.environmentId == null ? pipelinePhase.environmentId == null : this.environmentId.equals(pipelinePhase.environmentId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.repositoryId == null ? 0: this.repositoryId.hashCode());
    result = 31 * result + (this.branch == null ? 0: this.branch.hashCode());
    result = 31 * result + (this.environmentId == null ? 0: this.environmentId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelinePhase {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  repositoryId: ").append(repositoryId).append("\n");
    sb.append("  branch: ").append(branch).append("\n");
    sb.append("  environmentId: ").append(environmentId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
