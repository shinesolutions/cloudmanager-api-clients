/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBadRequestError.h
 *
 * A Bad Request response error.
 */

#ifndef OAIBadRequestError_H
#define OAIBadRequestError_H

#include <QJsonObject>

#include "OAIInvalidParameter.h"
#include "OAIMissingParameter.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBadRequestError : public OAIObject {
public:
    OAIBadRequestError();
    OAIBadRequestError(QString json);
    ~OAIBadRequestError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);

    QString getType() const;
    void setType(const QString &type);

    QString getTitle() const;
    void setTitle(const QString &title);

    QList<OAIMissingParameter> getMissingParams() const;
    void setMissingParams(const QList<OAIMissingParameter> &missing_params);

    QList<OAIInvalidParameter> getInvalidParams() const;
    void setInvalidParams(const QList<OAIInvalidParameter> &invalid_params);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString title;
    bool m_title_isSet;
    bool m_title_isValid;

    QList<OAIMissingParameter> missing_params;
    bool m_missing_params_isSet;
    bool m_missing_params_isValid;

    QList<OAIInvalidParameter> invalid_params;
    bool m_invalid_params_isSet;
    bool m_invalid_params_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBadRequestError)

#endif // OAIBadRequestError_H
