/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetric.h
 *
 * Describes a __Metric__
 */

#ifndef OAIMetric_H
#define OAIMetric_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMetric : public OAIObject {
public:
    OAIMetric();
    OAIMetric(QString json);
    ~OAIMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);

    QString getSeverity() const;
    void setSeverity(const QString &severity);

    bool isPassed() const;
    void setPassed(const bool &passed);

    bool isOverride() const;
    void setOverride(const bool &override);

    QString getActualValue() const;
    void setActualValue(const QString &actual_value);

    QString getExpectedValue() const;
    void setExpectedValue(const QString &expected_value);

    QString getComparator() const;
    void setComparator(const QString &comparator);

    QString getKpi() const;
    void setKpi(const QString &kpi);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    bool passed;
    bool m_passed_isSet;
    bool m_passed_isValid;

    bool override;
    bool m_override_isSet;
    bool m_override_isValid;

    QString actual_value;
    bool m_actual_value_isSet;
    bool m_actual_value_isValid;

    QString expected_value;
    bool m_expected_value_isSet;
    bool m_expected_value_isValid;

    QString comparator;
    bool m_comparator_isSet;
    bool m_comparator_isValid;

    QString kpi;
    bool m_kpi_isSet;
    bool m_kpi_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetric)

#endif // OAIMetric_H
