/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPipelineExecution.h
 *
 * Wraps a pipeline execution
 */

#ifndef OAIPipelineExecution_H
#define OAIPipelineExecution_H

#include <QJsonObject>

#include "OAIPipelineExecution__embedded.h"
#include "OAIPipelineExecution__links.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPipelineExecution : public OAIObject {
public:
    OAIPipelineExecution();
    OAIPipelineExecution(QString json);
    ~OAIPipelineExecution() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);

    QString getProgramId() const;
    void setProgramId(const QString &program_id);

    QString getPipelineId() const;
    void setPipelineId(const QString &pipeline_id);

    QString getArtifactsVersion() const;
    void setArtifactsVersion(const QString &artifacts_version);

    QString getUser() const;
    void setUser(const QString &user);

    QString getStatus() const;
    void setStatus(const QString &status);

    QString getTrigger() const;
    void setTrigger(const QString &trigger);

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);

    QDateTime getFinishedAt() const;
    void setFinishedAt(const QDateTime &finished_at);

    OAIPipelineExecution__embedded getEmbedded() const;
    void setEmbedded(const OAIPipelineExecution__embedded &_embedded);

    OAIPipelineExecution__links getLinks() const;
    void setLinks(const OAIPipelineExecution__links &_links);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString program_id;
    bool m_program_id_isSet;
    bool m_program_id_isValid;

    QString pipeline_id;
    bool m_pipeline_id_isSet;
    bool m_pipeline_id_isValid;

    QString artifacts_version;
    bool m_artifacts_version_isSet;
    bool m_artifacts_version_isValid;

    QString user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString trigger;
    bool m_trigger_isSet;
    bool m_trigger_isValid;

    QDateTime created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QDateTime finished_at;
    bool m_finished_at_isSet;
    bool m_finished_at_isValid;

    OAIPipelineExecution__embedded _embedded;
    bool m__embedded_isSet;
    bool m__embedded_isValid;

    OAIPipelineExecution__links _links;
    bool m__links_isSet;
    bool m__links_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPipelineExecution)

#endif // OAIPipelineExecution_H
