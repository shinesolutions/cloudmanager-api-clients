{-
   Cloud Manager API

   This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.

   OpenAPI Version: 3.0.3
   Cloud Manager API API version: 1.0.0
   Contact: opensource@shinesolutions.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : CloudManager.API.Programs
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module CloudManager.API.Programs where

import CloudManager.Core
import CloudManager.MimeTypes
import CloudManager.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Programs

-- *** deleteProgram

-- | @DELETE \/api\/program\/{programId}@
-- 
-- Delete Program
-- 
-- Delete an program
-- 
deleteProgram 
  :: ProgramId -- ^ "programId" -  Identifier of the program
  -> XGwImsOrgId -- ^ "xGwImsOrgId" -  IMS organization ID that the request is being made under.
  -> Authorization -- ^ "authorization" -  Bearer [token] - An access token for the technical account created through integration with Adobe IO
  -> XApiKey -- ^ "xApiKey" -  IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
  -> CloudManagerRequest DeleteProgram MimeNoContent Program MimeJSON
deleteProgram (ProgramId programId) (XGwImsOrgId xGwImsOrgId) (Authorization authorization) (XApiKey xApiKey) =
  _mkRequest "DELETE" ["/api/program/",toPath programId]
    `setHeader` toHeader ("x-gw-ims-org-id", xGwImsOrgId)
    `setHeader` toHeader ("Authorization", authorization)
    `setHeader` toHeader ("x-api-key", xApiKey)

data DeleteProgram  
-- | @application/json@
instance Produces DeleteProgram MimeJSON


-- *** getProgram

-- | @GET \/api\/program\/{programId}@
-- 
-- Get Program
-- 
-- Returns a program by its id
-- 
getProgram 
  :: ProgramId -- ^ "programId" -  Identifier of the program
  -> XGwImsOrgId -- ^ "xGwImsOrgId" -  IMS organization ID that the request is being made under.
  -> Authorization -- ^ "authorization" -  Bearer [token] - An access token for the technical account created through integration with Adobe IO
  -> XApiKey -- ^ "xApiKey" -  IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
  -> CloudManagerRequest GetProgram MimeNoContent Program MimeJSON
getProgram (ProgramId programId) (XGwImsOrgId xGwImsOrgId) (Authorization authorization) (XApiKey xApiKey) =
  _mkRequest "GET" ["/api/program/",toPath programId]
    `setHeader` toHeader ("x-gw-ims-org-id", xGwImsOrgId)
    `setHeader` toHeader ("Authorization", authorization)
    `setHeader` toHeader ("x-api-key", xApiKey)

data GetProgram  
-- | @application/json@
instance Produces GetProgram MimeJSON


-- *** getPrograms

-- | @GET \/api\/programs@
-- 
-- Lists Programs
-- 
-- Returns all programs that the requesting user has access to
-- 
getPrograms 
  :: XGwImsOrgId -- ^ "xGwImsOrgId" -  IMS organization ID that the request is being made under.
  -> Authorization -- ^ "authorization" -  Bearer [token] - An access token for the technical account created through integration with Adobe IO
  -> XApiKey -- ^ "xApiKey" -  IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io
  -> CloudManagerRequest GetPrograms MimeNoContent ProgramList MimeJSON
getPrograms (XGwImsOrgId xGwImsOrgId) (Authorization authorization) (XApiKey xApiKey) =
  _mkRequest "GET" ["/api/programs"]
    `setHeader` toHeader ("x-gw-ims-org-id", xGwImsOrgId)
    `setHeader` toHeader ("Authorization", authorization)
    `setHeader` toHeader ("x-api-key", xApiKey)

data GetPrograms  
-- | @application/json@
instance Produces GetPrograms MimeJSON

