/**
* Cloud Manager API
* This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
*
* The version of the OpenAPI document: 1.0.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * EmbeddedProgram.h
 *
 * Describes an __Embedded Program__
 */

#ifndef EmbeddedProgram_H_
#define EmbeddedProgram_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Describes an __Embedded Program__
/// </summary>
class  EmbeddedProgram
{
public:
    EmbeddedProgram();
    virtual ~EmbeddedProgram();

    void validate();

    /////////////////////////////////////////////
    /// EmbeddedProgram members

    /// <summary>
    /// Identifier of the program. Unique within the space.
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// Name of the program
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// Whether this Program has been enabled for Cloud Manager usage
    /// </summary>
    bool isEnabled() const;
    void setEnabled(bool const value);
    bool enabledIsSet() const;
    void unsetEnabled();
    /// <summary>
    /// Tenant Id
    /// </summary>
    std::string getTenantId() const;
    void setTenantId(std::string const& value);
    bool tenantIdIsSet() const;
    void unsetTenantId();

    friend void to_json(nlohmann::json& j, const EmbeddedProgram& o);
    friend void from_json(const nlohmann::json& j, EmbeddedProgram& o);
protected:
    std::string m_Id;
    bool m_IdIsSet;
    std::string m_Name;
    bool m_NameIsSet;
    bool m_Enabled;
    bool m_EnabledIsSet;
    std::string m_TenantId;
    bool m_TenantIdIsSet;
};

}
}
}
}

#endif /* EmbeddedProgram_H_ */
