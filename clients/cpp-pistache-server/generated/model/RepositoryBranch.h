/**
* Cloud Manager API
* This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
*
* The version of the OpenAPI document: 1.0.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * RepositoryBranch.h
 *
 * Represents a Git Branch
 */

#ifndef RepositoryBranch_H_
#define RepositoryBranch_H_


#include <string>
#include "RepositoryBranch__links.h"
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Represents a Git Branch
/// </summary>
class  RepositoryBranch
{
public:
    RepositoryBranch();
    virtual ~RepositoryBranch();

    void validate();

    /////////////////////////////////////////////
    /// RepositoryBranch members

    /// <summary>
    /// Identifier of the program. Unique within the space
    /// </summary>
    std::string getProgramId() const;
    void setProgramId(std::string const& value);
    bool programIdIsSet() const;
    void unsetProgramId();
    /// <summary>
    /// Identifier of the repository
    /// </summary>
    int64_t getRepositoryId() const;
    void setRepositoryId(int64_t const value);
    bool repositoryIdIsSet() const;
    void unsetRepositoryId();
    /// <summary>
    /// Name of the branch
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    RepositoryBranch__links getLinks() const;
    void setLinks(RepositoryBranch__links const& value);
    bool linksIsSet() const;
    void unset_links();

    friend void to_json(nlohmann::json& j, const RepositoryBranch& o);
    friend void from_json(const nlohmann::json& j, RepositoryBranch& o);
protected:
    std::string m_ProgramId;
    bool m_ProgramIdIsSet;
    int64_t m_RepositoryId;
    bool m_RepositoryIdIsSet;
    std::string m_Name;
    bool m_NameIsSet;
    RepositoryBranch__links m__links;
    bool m__linksIsSet;
};

}
}
}
}

#endif /* RepositoryBranch_H_ */
