/**
* Cloud Manager API
* This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
*
* The version of the OpenAPI document: 1.0.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ProgramList__links.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ProgramList__links::ProgramList__links()
{
    m_NextIsSet = false;
    m_PrevIsSet = false;
    m_SelfIsSet = false;
    
}

ProgramList__links::~ProgramList__links()
{
}

void ProgramList__links::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const ProgramList__links& o)
{
    j = nlohmann::json();
    if(o.nextIsSet())
        j["next"] = o.m_Next;
    if(o.prevIsSet())
        j["prev"] = o.m_Prev;
    if(o.selfIsSet())
        j["self"] = o.m_Self;
}

void from_json(const nlohmann::json& j, ProgramList__links& o)
{
    if(j.find("next") != j.end())
    {
        j.at("next").get_to(o.m_Next);
        o.m_NextIsSet = true;
    } 
    if(j.find("prev") != j.end())
    {
        j.at("prev").get_to(o.m_Prev);
        o.m_PrevIsSet = true;
    } 
    if(j.find("self") != j.end())
    {
        j.at("self").get_to(o.m_Self);
        o.m_SelfIsSet = true;
    } 
}

HalLink ProgramList__links::getNext() const
{
    return m_Next;
}
void ProgramList__links::setNext(HalLink const& value)
{
    m_Next = value;
    m_NextIsSet = true;
}
bool ProgramList__links::nextIsSet() const
{
    return m_NextIsSet;
}
void ProgramList__links::unsetNext()
{
    m_NextIsSet = false;
}
HalLink ProgramList__links::getPrev() const
{
    return m_Prev;
}
void ProgramList__links::setPrev(HalLink const& value)
{
    m_Prev = value;
    m_PrevIsSet = true;
}
bool ProgramList__links::prevIsSet() const
{
    return m_PrevIsSet;
}
void ProgramList__links::unsetPrev()
{
    m_PrevIsSet = false;
}
HalLink ProgramList__links::getSelf() const
{
    return m_Self;
}
void ProgramList__links::setSelf(HalLink const& value)
{
    m_Self = value;
    m_SelfIsSet = true;
}
bool ProgramList__links::selfIsSet() const
{
    return m_SelfIsSet;
}
void ProgramList__links::unsetSelf()
{
    m_SelfIsSet = false;
}

}
}
}
}

