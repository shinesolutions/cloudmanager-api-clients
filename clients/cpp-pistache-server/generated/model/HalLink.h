/**
* Cloud Manager API
* This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
*
* The version of the OpenAPI document: 1.0.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * HalLink.h
 *
 * 
 */

#ifndef HalLink_H_
#define HalLink_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  HalLink
{
public:
    HalLink();
    virtual ~HalLink();

    void validate();

    /////////////////////////////////////////////
    /// HalLink members

    /// <summary>
    /// 
    /// </summary>
    std::string getHref() const;
    void setHref(std::string const& value);
    bool hrefIsSet() const;
    void unsetHref();
    /// <summary>
    /// 
    /// </summary>
    bool isTemplated() const;
    void setTemplated(bool const value);
    bool templatedIsSet() const;
    void unsetTemplated();
    /// <summary>
    /// 
    /// </summary>
    std::string getType() const;
    void setType(std::string const& value);
    bool typeIsSet() const;
    void unsetType();
    /// <summary>
    /// 
    /// </summary>
    std::string getDeprecation() const;
    void setDeprecation(std::string const& value);
    bool deprecationIsSet() const;
    void unsetDeprecation();
    /// <summary>
    /// 
    /// </summary>
    std::string getProfile() const;
    void setProfile(std::string const& value);
    bool profileIsSet() const;
    void unsetProfile();
    /// <summary>
    /// 
    /// </summary>
    std::string getTitle() const;
    void setTitle(std::string const& value);
    bool titleIsSet() const;
    void unsetTitle();
    /// <summary>
    /// 
    /// </summary>
    std::string getHreflang() const;
    void setHreflang(std::string const& value);
    bool hreflangIsSet() const;
    void unsetHreflang();
    /// <summary>
    /// 
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();

    friend void to_json(nlohmann::json& j, const HalLink& o);
    friend void from_json(const nlohmann::json& j, HalLink& o);
protected:
    std::string m_Href;
    bool m_HrefIsSet;
    bool m_Templated;
    bool m_TemplatedIsSet;
    std::string m_Type;
    bool m_TypeIsSet;
    std::string m_Deprecation;
    bool m_DeprecationIsSet;
    std::string m_Profile;
    bool m_ProfileIsSet;
    std::string m_Title;
    bool m_TitleIsSet;
    std::string m_Hreflang;
    bool m_HreflangIsSet;
    std::string m_Name;
    bool m_NameIsSet;
};

}
}
}
}

#endif /* HalLink_H_ */
