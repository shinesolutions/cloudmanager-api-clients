/**
* Cloud Manager API
* This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
*
* The version of the OpenAPI document: 1.0.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Repository.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Repository::Repository()
{
    m_Repo = "";
    m_RepoIsSet = false;
    m_Description = "";
    m_DescriptionIsSet = false;
    m__linksIsSet = false;
    
}

Repository::~Repository()
{
}

void Repository::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const Repository& o)
{
    j = nlohmann::json();
    if(o.repoIsSet())
        j["repo"] = o.m_Repo;
    if(o.descriptionIsSet())
        j["description"] = o.m_Description;
    if(o.linksIsSet())
        j["_links"] = o.m__links;
}

void from_json(const nlohmann::json& j, Repository& o)
{
    if(j.find("repo") != j.end())
    {
        j.at("repo").get_to(o.m_Repo);
        o.m_RepoIsSet = true;
    } 
    if(j.find("description") != j.end())
    {
        j.at("description").get_to(o.m_Description);
        o.m_DescriptionIsSet = true;
    } 
    if(j.find("_links") != j.end())
    {
        j.at("_links").get_to(o.m__links);
        o.m__linksIsSet = true;
    } 
}

std::string Repository::getRepo() const
{
    return m_Repo;
}
void Repository::setRepo(std::string const& value)
{
    m_Repo = value;
    m_RepoIsSet = true;
}
bool Repository::repoIsSet() const
{
    return m_RepoIsSet;
}
void Repository::unsetRepo()
{
    m_RepoIsSet = false;
}
std::string Repository::getDescription() const
{
    return m_Description;
}
void Repository::setDescription(std::string const& value)
{
    m_Description = value;
    m_DescriptionIsSet = true;
}
bool Repository::descriptionIsSet() const
{
    return m_DescriptionIsSet;
}
void Repository::unsetDescription()
{
    m_DescriptionIsSet = false;
}
Repository__links Repository::getLinks() const
{
    return m__links;
}
void Repository::setLinks(Repository__links const& value)
{
    m__links = value;
    m__linksIsSet = true;
}
bool Repository::linksIsSet() const
{
    return m__linksIsSet;
}
void Repository::unset_links()
{
    m__linksIsSet = false;
}

}
}
}
}

