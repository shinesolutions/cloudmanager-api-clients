/**
* Cloud Manager API
* This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
*
* The version of the OpenAPI document: 1.0.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * EnvironmentLog.h
 *
 * Log from Environment
 */

#ifndef EnvironmentLog_H_
#define EnvironmentLog_H_


#include <string>
#include "EnvironmentLog__links.h"
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Log from Environment
/// </summary>
class  EnvironmentLog
{
public:
    EnvironmentLog();
    virtual ~EnvironmentLog();

    void validate();

    /////////////////////////////////////////////
    /// EnvironmentLog members

    /// <summary>
    /// Name of the service
    /// </summary>
    std::string getService() const;
    void setService(std::string const& value);
    bool serviceIsSet() const;
    void unsetService();
    /// <summary>
    /// Name of the Log
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// date of the Log
    /// </summary>
    std::string getDate() const;
    void setDate(std::string const& value);
    bool dateIsSet() const;
    void unsetdate();
    /// <summary>
    /// 
    /// </summary>
    int64_t getProgramId() const;
    void setProgramId(int64_t const value);
    bool programIdIsSet() const;
    void unsetProgramId();
    /// <summary>
    /// 
    /// </summary>
    int64_t getEnvironmentId() const;
    void setEnvironmentId(int64_t const value);
    bool environmentIdIsSet() const;
    void unsetEnvironmentId();
    /// <summary>
    /// 
    /// </summary>
    EnvironmentLog__links getLinks() const;
    void setLinks(EnvironmentLog__links const& value);
    bool linksIsSet() const;
    void unset_links();

    friend void to_json(nlohmann::json& j, const EnvironmentLog& o);
    friend void from_json(const nlohmann::json& j, EnvironmentLog& o);
protected:
    std::string m_Service;
    bool m_ServiceIsSet;
    std::string m_Name;
    bool m_NameIsSet;
    std::string m_date;
    bool m_dateIsSet;
    int64_t m_ProgramId;
    bool m_ProgramIdIsSet;
    int64_t m_EnvironmentId;
    bool m_EnvironmentIdIsSet;
    EnvironmentLog__links m__links;
    bool m__linksIsSet;
};

}
}
}
}

#endif /* EnvironmentLog_H_ */
