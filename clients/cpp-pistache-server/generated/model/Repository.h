/**
* Cloud Manager API
* This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
*
* The version of the OpenAPI document: 1.0.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Repository.h
 *
 * A sourcecode repository
 */

#ifndef Repository_H_
#define Repository_H_


#include "Repository__links.h"
#include <string>
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// A sourcecode repository
/// </summary>
class  Repository
{
public:
    Repository();
    virtual ~Repository();

    void validate();

    /////////////////////////////////////////////
    /// Repository members

    /// <summary>
    /// Repository name
    /// </summary>
    std::string getRepo() const;
    void setRepo(std::string const& value);
    bool repoIsSet() const;
    void unsetRepo();
    /// <summary>
    /// description
    /// </summary>
    std::string getDescription() const;
    void setDescription(std::string const& value);
    bool descriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// 
    /// </summary>
    Repository__links getLinks() const;
    void setLinks(Repository__links const& value);
    bool linksIsSet() const;
    void unset_links();

    friend void to_json(nlohmann::json& j, const Repository& o);
    friend void from_json(const nlohmann::json& j, Repository& o);
protected:
    std::string m_Repo;
    bool m_RepoIsSet;
    std::string m_Description;
    bool m_DescriptionIsSet;
    Repository__links m__links;
    bool m__linksIsSet;
};

}
}
}
}

#endif /* Repository_H_ */
