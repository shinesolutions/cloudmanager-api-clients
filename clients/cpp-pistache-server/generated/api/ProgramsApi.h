/**
* Cloud Manager API
* This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
*
* The version of the OpenAPI document: 1.0.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ProgramsApi.h
 *
 * 
 */

#ifndef ProgramsApi_H_
#define ProgramsApi_H_


#include <pistache/http.h>
#include <pistache/router.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>


#include "Program.h"
#include "ProgramList.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class  ProgramsApi {
public:
    ProgramsApi(std::shared_ptr<Pistache::Rest::Router>);
    virtual ~ProgramsApi() {}
    void init();

    const std::string base = "";

private:
    void setupRoutes();

    void delete_program_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void get_program_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void get_programs_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void programs_api_default_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);

    std::shared_ptr<Pistache::Rest::Router> router;

    /// <summary>
    /// Delete Program
    /// </summary>
    /// <remarks>
    /// Delete an program
    /// </remarks>
    /// <param name="programId">Identifier of the program</param>
    /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
    /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
    /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
    virtual void delete_program(const std::string &programId, const Pistache::Optional<Pistache::Http::Header::Raw> &xGwImsOrgId, const Pistache::Optional<Pistache::Http::Header::Raw> &authorization, const Pistache::Optional<Pistache::Http::Header::Raw> &xApiKey, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// Get Program
    /// </summary>
    /// <remarks>
    /// Returns a program by its id
    /// </remarks>
    /// <param name="programId">Identifier of the program</param>
    /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
    /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
    /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
    virtual void get_program(const std::string &programId, const Pistache::Optional<Pistache::Http::Header::Raw> &xGwImsOrgId, const Pistache::Optional<Pistache::Http::Header::Raw> &authorization, const Pistache::Optional<Pistache::Http::Header::Raw> &xApiKey, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// Lists Programs
    /// </summary>
    /// <remarks>
    /// Returns all programs that the requesting user has access to
    /// </remarks>
    /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
    /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
    /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
    virtual void get_programs(const Pistache::Optional<Pistache::Http::Header::Raw> &xGwImsOrgId, const Pistache::Optional<Pistache::Http::Header::Raw> &authorization, const Pistache::Optional<Pistache::Http::Header::Raw> &xApiKey, Pistache::Http::ResponseWriter &response) = 0;

};

}
}
}
}

#endif /* ProgramsApi_H_ */

