/*
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using com.shinesolutions.cloudmanagerapiclient.Attributes;
using Microsoft.AspNetCore.Authorization;
using com.shinesolutions.cloudmanagerapiclient.Models;

namespace com.shinesolutions.cloudmanagerapiclient.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class VariablesApiController : ControllerBase
    { 
        /// <summary>
        /// List User Environment Variables
        /// </summary>
        /// <remarks>List the user defined variables for an environment (Cloud Service only).</remarks>
        /// <param name="programId">Identifier of the program</param>
        /// <param name="environmentId">Identifier of the environment</param>
        /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
        /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
        /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
        /// <response code="200">Successful retrieval of environment variables</response>
        /// <response code="404">Environment not found</response>
        [HttpGet]
        [Route("/api/program/{programId}/environment/{environmentId}/variables")]
        [ValidateModelState]
        [SwaggerOperation("GetEnvironmentVariables")]
        [SwaggerResponse(statusCode: 200, type: typeof(VariableList), description: "Successful retrieval of environment variables")]
        public virtual IActionResult GetEnvironmentVariables([FromRoute][Required]string programId, [FromRoute][Required]string environmentId, [FromHeader][Required()]string xGwImsOrgId, [FromHeader][Required()]string authorization, [FromHeader][Required()]string xApiKey)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(VariableList));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"_totalNumberOfItems\" : 1,\n  \"_embedded\" : {\n    \"variables\" : \"[{ 'name':'variable1Name', 'value':'variable1Value'}, { 'name':'variable2Name', 'type':'secretString', 'value':'variable2SecretValue'}]\"\n  },\n  \"_links\" : {\n    \"http://ns.adobe.com/adobecloud/rel/program\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"http://ns.adobe.com/adobecloud/rel/environment\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"self\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    }\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<VariableList>(exampleJson)
            : default(VariableList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Patch User Environment Variables
        /// </summary>
        /// <remarks>Modify multiple environment variables (Cloud Service only). To delete a variable, include it with an empty value.</remarks>
        /// <param name="programId">Identifier of the program</param>
        /// <param name="environmentId">Identifier of the environment</param>
        /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
        /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
        /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
        /// <param name="contentType">Must always be application/json</param>
        /// <param name="body">The list of variables to add, modify, or remove. It is not necessary to send variables here which are not changing.</param>
        /// <response code="200">Successful update of environment variables</response>
        /// <response code="404">Environment not found</response>
        [HttpPatch]
        [Route("/api/program/{programId}/environment/{environmentId}/variables")]
        [ValidateModelState]
        [SwaggerOperation("PatchEnvironmentVariables")]
        [SwaggerResponse(statusCode: 200, type: typeof(VariableList), description: "Successful update of environment variables")]
        public virtual IActionResult PatchEnvironmentVariables([FromRoute][Required]string programId, [FromRoute][Required]string environmentId, [FromHeader][Required()]string xGwImsOrgId, [FromHeader][Required()]string authorization, [FromHeader][Required()]string xApiKey, [FromHeader][Required()]string contentType, [FromBody]List<Variable> body)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(VariableList));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"_totalNumberOfItems\" : 1,\n  \"_embedded\" : {\n    \"variables\" : \"[{ 'name':'variable1Name', 'value':'variable1Value'}, { 'name':'variable2Name', 'type':'secretString', 'value':'variable2SecretValue'}]\"\n  },\n  \"_links\" : {\n    \"http://ns.adobe.com/adobecloud/rel/program\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"http://ns.adobe.com/adobecloud/rel/environment\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"self\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    }\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<VariableList>(exampleJson)
            : default(VariableList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
