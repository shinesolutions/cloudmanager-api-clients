/*
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using com.shinesolutions.cloudmanagerapiclient.Attributes;
using Microsoft.AspNetCore.Authorization;
using com.shinesolutions.cloudmanagerapiclient.Models;

namespace com.shinesolutions.cloudmanagerapiclient.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProgramsApiController : ControllerBase
    { 
        /// <summary>
        /// Delete Program
        /// </summary>
        /// <remarks>Delete an program</remarks>
        /// <param name="programId">Identifier of the program</param>
        /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
        /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
        /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
        /// <response code="200">successful operation</response>
        /// <response code="202">Delete was successful.</response>
        /// <response code="403">Forbidden.</response>
        /// <response code="404">Program not found.</response>
        /// <response code="412">Deletion not supported</response>
        [HttpDelete]
        [Route("/api/program/{programId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProgram")]
        [SwaggerResponse(statusCode: 200, type: typeof(Program), description: "successful operation")]
        [SwaggerResponse(statusCode: 202, type: typeof(Program), description: "Delete was successful.")]
        public virtual IActionResult DeleteProgram([FromRoute][Required]string programId, [FromHeader][Required()]string xGwImsOrgId, [FromHeader][Required()]string authorization, [FromHeader][Required()]string xApiKey)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Program));
            //TODO: Uncomment the next line to return response 202 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(202, default(Program));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 412 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(412);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"http://ns.adobe.com/adobecloud/rel/environments\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"http://ns.adobe.com/adobecloud/rel/repositories\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"self\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"http://ns.adobe.com/adobecloud/rel/pipelines\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    }\n  },\n  \"name\" : \"AcmeCorp Main Site\",\n  \"tenantId\" : \"acmeCorp\",\n  \"id\" : \"14\",\n  \"enabled\" : false,\n  \"imsOrgId\" : \"6522A55453334E247F120101@AdobeOrg\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Program>(exampleJson)
            : default(Program);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Program
        /// </summary>
        /// <remarks>Returns a program by its id</remarks>
        /// <param name="programId">Identifier of the program</param>
        /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
        /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
        /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
        /// <response code="200">Successful retrieval of program</response>
        /// <response code="404">Program not found</response>
        [HttpGet]
        [Route("/api/program/{programId}")]
        [ValidateModelState]
        [SwaggerOperation("GetProgram")]
        [SwaggerResponse(statusCode: 200, type: typeof(Program), description: "Successful retrieval of program")]
        public virtual IActionResult GetProgram([FromRoute][Required]string programId, [FromHeader][Required()]string xGwImsOrgId, [FromHeader][Required()]string authorization, [FromHeader][Required()]string xApiKey)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Program));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"_links\" : {\n    \"http://ns.adobe.com/adobecloud/rel/environments\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"http://ns.adobe.com/adobecloud/rel/repositories\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"self\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"http://ns.adobe.com/adobecloud/rel/pipelines\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    }\n  },\n  \"name\" : \"AcmeCorp Main Site\",\n  \"tenantId\" : \"acmeCorp\",\n  \"id\" : \"14\",\n  \"enabled\" : false,\n  \"imsOrgId\" : \"6522A55453334E247F120101@AdobeOrg\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Program>(exampleJson)
            : default(Program);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Lists Programs
        /// </summary>
        /// <remarks>Returns all programs that the requesting user has access to</remarks>
        /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
        /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
        /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/api/programs")]
        [ValidateModelState]
        [SwaggerOperation("GetPrograms")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProgramList), description: "successful operation")]
        public virtual IActionResult GetPrograms([FromHeader][Required()]string xGwImsOrgId, [FromHeader][Required()]string authorization, [FromHeader][Required()]string xApiKey)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ProgramList));
            string exampleJson = null;
            exampleJson = "{\n  \"_totalNumberOfItems\" : 0,\n  \"_embedded\" : {\n    \"programs\" : [ {\n      \"name\" : \"AcmeCorp Main Site\",\n      \"tenantId\" : \"acmeCorp\",\n      \"id\" : \"14\",\n      \"enabled\" : false\n    }, {\n      \"name\" : \"AcmeCorp Main Site\",\n      \"tenantId\" : \"acmeCorp\",\n      \"id\" : \"14\",\n      \"enabled\" : false\n    } ]\n  },\n  \"_links\" : {\n    \"next\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"prev\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    },\n    \"self\" : {\n      \"hreflang\" : \"hreflang\",\n      \"templated\" : false,\n      \"profile\" : \"profile\",\n      \"name\" : \"name\",\n      \"href\" : \"href\",\n      \"type\" : \"type\",\n      \"deprecation\" : \"deprecation\",\n      \"title\" : \"title\"\n    }\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ProgramList>(exampleJson)
            : default(ProgramList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
