/*
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using com.shinesolutions.cloudmanagerapiclient.Converters;

namespace com.shinesolutions.cloudmanagerapiclient.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class PipelineExecutionStepStateLinks : IEquatable<PipelineExecutionStepStateLinks>
    {
        /// <summary>
        /// Gets or Sets HttpNsAdobeComAdobecloudRelExecution
        /// </summary>
        [DataMember(Name="http://ns.adobe.com/adobecloud/rel/execution", EmitDefaultValue=false)]
        public HalLink HttpNsAdobeComAdobecloudRelExecution { get; set; }

        /// <summary>
        /// Gets or Sets HttpNsAdobeComAdobecloudRelPipeline
        /// </summary>
        [DataMember(Name="http://ns.adobe.com/adobecloud/rel/pipeline", EmitDefaultValue=false)]
        public HalLink HttpNsAdobeComAdobecloudRelPipeline { get; set; }

        /// <summary>
        /// Gets or Sets HttpNsAdobeComAdobecloudRelPipelineLogs
        /// </summary>
        [DataMember(Name="http://ns.adobe.com/adobecloud/rel/pipeline/logs", EmitDefaultValue=false)]
        public HalLink HttpNsAdobeComAdobecloudRelPipelineLogs { get; set; }

        /// <summary>
        /// Gets or Sets HttpNsAdobeComAdobecloudRelPipelineMetrics
        /// </summary>
        [DataMember(Name="http://ns.adobe.com/adobecloud/rel/pipeline/metrics", EmitDefaultValue=false)]
        public HalLink HttpNsAdobeComAdobecloudRelPipelineMetrics { get; set; }

        /// <summary>
        /// Gets or Sets HttpNsAdobeComAdobecloudRelPipelineAdvance
        /// </summary>
        [DataMember(Name="http://ns.adobe.com/adobecloud/rel/pipeline/advance", EmitDefaultValue=false)]
        public HalLink HttpNsAdobeComAdobecloudRelPipelineAdvance { get; set; }

        /// <summary>
        /// Gets or Sets HttpNsAdobeComAdobecloudRelPipelineCancel
        /// </summary>
        [DataMember(Name="http://ns.adobe.com/adobecloud/rel/pipeline/cancel", EmitDefaultValue=false)]
        public HalLink HttpNsAdobeComAdobecloudRelPipelineCancel { get; set; }

        /// <summary>
        /// Gets or Sets HttpNsAdobeComAdobecloudRelProgram
        /// </summary>
        [DataMember(Name="http://ns.adobe.com/adobecloud/rel/program", EmitDefaultValue=false)]
        public HalLink HttpNsAdobeComAdobecloudRelProgram { get; set; }

        /// <summary>
        /// Gets or Sets Self
        /// </summary>
        [DataMember(Name="self", EmitDefaultValue=false)]
        public HalLink Self { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PipelineExecutionStepStateLinks {\n");
            sb.Append("  HttpNsAdobeComAdobecloudRelExecution: ").Append(HttpNsAdobeComAdobecloudRelExecution).Append("\n");
            sb.Append("  HttpNsAdobeComAdobecloudRelPipeline: ").Append(HttpNsAdobeComAdobecloudRelPipeline).Append("\n");
            sb.Append("  HttpNsAdobeComAdobecloudRelPipelineLogs: ").Append(HttpNsAdobeComAdobecloudRelPipelineLogs).Append("\n");
            sb.Append("  HttpNsAdobeComAdobecloudRelPipelineMetrics: ").Append(HttpNsAdobeComAdobecloudRelPipelineMetrics).Append("\n");
            sb.Append("  HttpNsAdobeComAdobecloudRelPipelineAdvance: ").Append(HttpNsAdobeComAdobecloudRelPipelineAdvance).Append("\n");
            sb.Append("  HttpNsAdobeComAdobecloudRelPipelineCancel: ").Append(HttpNsAdobeComAdobecloudRelPipelineCancel).Append("\n");
            sb.Append("  HttpNsAdobeComAdobecloudRelProgram: ").Append(HttpNsAdobeComAdobecloudRelProgram).Append("\n");
            sb.Append("  Self: ").Append(Self).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((PipelineExecutionStepStateLinks)obj);
        }

        /// <summary>
        /// Returns true if PipelineExecutionStepStateLinks instances are equal
        /// </summary>
        /// <param name="other">Instance of PipelineExecutionStepStateLinks to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PipelineExecutionStepStateLinks other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    HttpNsAdobeComAdobecloudRelExecution == other.HttpNsAdobeComAdobecloudRelExecution ||
                    HttpNsAdobeComAdobecloudRelExecution != null &&
                    HttpNsAdobeComAdobecloudRelExecution.Equals(other.HttpNsAdobeComAdobecloudRelExecution)
                ) && 
                (
                    HttpNsAdobeComAdobecloudRelPipeline == other.HttpNsAdobeComAdobecloudRelPipeline ||
                    HttpNsAdobeComAdobecloudRelPipeline != null &&
                    HttpNsAdobeComAdobecloudRelPipeline.Equals(other.HttpNsAdobeComAdobecloudRelPipeline)
                ) && 
                (
                    HttpNsAdobeComAdobecloudRelPipelineLogs == other.HttpNsAdobeComAdobecloudRelPipelineLogs ||
                    HttpNsAdobeComAdobecloudRelPipelineLogs != null &&
                    HttpNsAdobeComAdobecloudRelPipelineLogs.Equals(other.HttpNsAdobeComAdobecloudRelPipelineLogs)
                ) && 
                (
                    HttpNsAdobeComAdobecloudRelPipelineMetrics == other.HttpNsAdobeComAdobecloudRelPipelineMetrics ||
                    HttpNsAdobeComAdobecloudRelPipelineMetrics != null &&
                    HttpNsAdobeComAdobecloudRelPipelineMetrics.Equals(other.HttpNsAdobeComAdobecloudRelPipelineMetrics)
                ) && 
                (
                    HttpNsAdobeComAdobecloudRelPipelineAdvance == other.HttpNsAdobeComAdobecloudRelPipelineAdvance ||
                    HttpNsAdobeComAdobecloudRelPipelineAdvance != null &&
                    HttpNsAdobeComAdobecloudRelPipelineAdvance.Equals(other.HttpNsAdobeComAdobecloudRelPipelineAdvance)
                ) && 
                (
                    HttpNsAdobeComAdobecloudRelPipelineCancel == other.HttpNsAdobeComAdobecloudRelPipelineCancel ||
                    HttpNsAdobeComAdobecloudRelPipelineCancel != null &&
                    HttpNsAdobeComAdobecloudRelPipelineCancel.Equals(other.HttpNsAdobeComAdobecloudRelPipelineCancel)
                ) && 
                (
                    HttpNsAdobeComAdobecloudRelProgram == other.HttpNsAdobeComAdobecloudRelProgram ||
                    HttpNsAdobeComAdobecloudRelProgram != null &&
                    HttpNsAdobeComAdobecloudRelProgram.Equals(other.HttpNsAdobeComAdobecloudRelProgram)
                ) && 
                (
                    Self == other.Self ||
                    Self != null &&
                    Self.Equals(other.Self)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (HttpNsAdobeComAdobecloudRelExecution != null)
                    hashCode = hashCode * 59 + HttpNsAdobeComAdobecloudRelExecution.GetHashCode();
                    if (HttpNsAdobeComAdobecloudRelPipeline != null)
                    hashCode = hashCode * 59 + HttpNsAdobeComAdobecloudRelPipeline.GetHashCode();
                    if (HttpNsAdobeComAdobecloudRelPipelineLogs != null)
                    hashCode = hashCode * 59 + HttpNsAdobeComAdobecloudRelPipelineLogs.GetHashCode();
                    if (HttpNsAdobeComAdobecloudRelPipelineMetrics != null)
                    hashCode = hashCode * 59 + HttpNsAdobeComAdobecloudRelPipelineMetrics.GetHashCode();
                    if (HttpNsAdobeComAdobecloudRelPipelineAdvance != null)
                    hashCode = hashCode * 59 + HttpNsAdobeComAdobecloudRelPipelineAdvance.GetHashCode();
                    if (HttpNsAdobeComAdobecloudRelPipelineCancel != null)
                    hashCode = hashCode * 59 + HttpNsAdobeComAdobecloudRelPipelineCancel.GetHashCode();
                    if (HttpNsAdobeComAdobecloudRelProgram != null)
                    hashCode = hashCode * 59 + HttpNsAdobeComAdobecloudRelProgram.GetHashCode();
                    if (Self != null)
                    hashCode = hashCode * 59 + Self.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(PipelineExecutionStepStateLinks left, PipelineExecutionStepStateLinks right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(PipelineExecutionStepStateLinks left, PipelineExecutionStepStateLinks right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
