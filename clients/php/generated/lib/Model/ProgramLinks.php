<?php
/**
 * ProgramLinks
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ProgramLinks Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProgramLinks implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Program__links';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'http__ns_adobe_com_adobecloud_rel_pipelines' => '\OpenAPI\Client\Model\HalLink',
        'http__ns_adobe_com_adobecloud_rel_environments' => '\OpenAPI\Client\Model\HalLink',
        'http__ns_adobe_com_adobecloud_rel_repositories' => '\OpenAPI\Client\Model\HalLink',
        'self' => '\OpenAPI\Client\Model\HalLink'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'http__ns_adobe_com_adobecloud_rel_pipelines' => null,
        'http__ns_adobe_com_adobecloud_rel_environments' => null,
        'http__ns_adobe_com_adobecloud_rel_repositories' => null,
        'self' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'http__ns_adobe_com_adobecloud_rel_pipelines' => 'http://ns.adobe.com/adobecloud/rel/pipelines',
        'http__ns_adobe_com_adobecloud_rel_environments' => 'http://ns.adobe.com/adobecloud/rel/environments',
        'http__ns_adobe_com_adobecloud_rel_repositories' => 'http://ns.adobe.com/adobecloud/rel/repositories',
        'self' => 'self'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'http__ns_adobe_com_adobecloud_rel_pipelines' => 'setHttpNsAdobeComAdobecloudRelPipelines',
        'http__ns_adobe_com_adobecloud_rel_environments' => 'setHttpNsAdobeComAdobecloudRelEnvironments',
        'http__ns_adobe_com_adobecloud_rel_repositories' => 'setHttpNsAdobeComAdobecloudRelRepositories',
        'self' => 'setSelf'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'http__ns_adobe_com_adobecloud_rel_pipelines' => 'getHttpNsAdobeComAdobecloudRelPipelines',
        'http__ns_adobe_com_adobecloud_rel_environments' => 'getHttpNsAdobeComAdobecloudRelEnvironments',
        'http__ns_adobe_com_adobecloud_rel_repositories' => 'getHttpNsAdobeComAdobecloudRelRepositories',
        'self' => 'getSelf'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['http__ns_adobe_com_adobecloud_rel_pipelines'] = isset($data['http__ns_adobe_com_adobecloud_rel_pipelines']) ? $data['http__ns_adobe_com_adobecloud_rel_pipelines'] : null;
        $this->container['http__ns_adobe_com_adobecloud_rel_environments'] = isset($data['http__ns_adobe_com_adobecloud_rel_environments']) ? $data['http__ns_adobe_com_adobecloud_rel_environments'] : null;
        $this->container['http__ns_adobe_com_adobecloud_rel_repositories'] = isset($data['http__ns_adobe_com_adobecloud_rel_repositories']) ? $data['http__ns_adobe_com_adobecloud_rel_repositories'] : null;
        $this->container['self'] = isset($data['self']) ? $data['self'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets http__ns_adobe_com_adobecloud_rel_pipelines
     *
     * @return \OpenAPI\Client\Model\HalLink|null
     */
    public function getHttpNsAdobeComAdobecloudRelPipelines()
    {
        return $this->container['http__ns_adobe_com_adobecloud_rel_pipelines'];
    }

    /**
     * Sets http__ns_adobe_com_adobecloud_rel_pipelines
     *
     * @param \OpenAPI\Client\Model\HalLink|null $http__ns_adobe_com_adobecloud_rel_pipelines http__ns_adobe_com_adobecloud_rel_pipelines
     *
     * @return $this
     */
    public function setHttpNsAdobeComAdobecloudRelPipelines($http__ns_adobe_com_adobecloud_rel_pipelines)
    {
        $this->container['http__ns_adobe_com_adobecloud_rel_pipelines'] = $http__ns_adobe_com_adobecloud_rel_pipelines;

        return $this;
    }

    /**
     * Gets http__ns_adobe_com_adobecloud_rel_environments
     *
     * @return \OpenAPI\Client\Model\HalLink|null
     */
    public function getHttpNsAdobeComAdobecloudRelEnvironments()
    {
        return $this->container['http__ns_adobe_com_adobecloud_rel_environments'];
    }

    /**
     * Sets http__ns_adobe_com_adobecloud_rel_environments
     *
     * @param \OpenAPI\Client\Model\HalLink|null $http__ns_adobe_com_adobecloud_rel_environments http__ns_adobe_com_adobecloud_rel_environments
     *
     * @return $this
     */
    public function setHttpNsAdobeComAdobecloudRelEnvironments($http__ns_adobe_com_adobecloud_rel_environments)
    {
        $this->container['http__ns_adobe_com_adobecloud_rel_environments'] = $http__ns_adobe_com_adobecloud_rel_environments;

        return $this;
    }

    /**
     * Gets http__ns_adobe_com_adobecloud_rel_repositories
     *
     * @return \OpenAPI\Client\Model\HalLink|null
     */
    public function getHttpNsAdobeComAdobecloudRelRepositories()
    {
        return $this->container['http__ns_adobe_com_adobecloud_rel_repositories'];
    }

    /**
     * Sets http__ns_adobe_com_adobecloud_rel_repositories
     *
     * @param \OpenAPI\Client\Model\HalLink|null $http__ns_adobe_com_adobecloud_rel_repositories http__ns_adobe_com_adobecloud_rel_repositories
     *
     * @return $this
     */
    public function setHttpNsAdobeComAdobecloudRelRepositories($http__ns_adobe_com_adobecloud_rel_repositories)
    {
        $this->container['http__ns_adobe_com_adobecloud_rel_repositories'] = $http__ns_adobe_com_adobecloud_rel_repositories;

        return $this;
    }

    /**
     * Gets self
     *
     * @return \OpenAPI\Client\Model\HalLink|null
     */
    public function getSelf()
    {
        return $this->container['self'];
    }

    /**
     * Sets self
     *
     * @param \OpenAPI\Client\Model\HalLink|null $self self
     *
     * @return $this
     */
    public function setSelf($self)
    {
        $this->container['self'] = $self;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


