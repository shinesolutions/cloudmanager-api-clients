# NOTE: This file is auto generated by the openapi generator program.
# https://github.com/openapitools/openapi-generator
# Do not edit the class manually.

# branches
open_api_server_branches_getbranches:
    path:     /api/program/{programId}/repository/{repositoryId}/branches
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.branches:getBranchesAction
    requirements:
        programId: '[a-z0-9]+'
        repositoryId: '[a-z0-9]+'

# environments
open_api_server_environments_deleteenvironment:
    path:     /api/program/{programId}/environment/{environmentId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.environments:deleteEnvironmentAction
    requirements:
        programId: '[a-z0-9]+'
        environmentId: '[a-z0-9]+'

open_api_server_environments_downloadlogs:
    path:     /api/program/{programId}/environment/{environmentId}/logs/download
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.environments:downloadLogsAction
    requirements:
        programId: '[a-z0-9]+'
        environmentId: '[a-z0-9]+'

open_api_server_environments_getenvironment:
    path:     /api/program/{programId}/environment/{environmentId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.environments:getEnvironmentAction
    requirements:
        programId: '[a-z0-9]+'
        environmentId: '[a-z0-9]+'

open_api_server_environments_getenvironmentlogs:
    path:     /api/program/{programId}/environment/{environmentId}/logs
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.environments:getEnvironmentLogsAction
    requirements:
        programId: '[a-z0-9]+'
        environmentId: '[a-z0-9]+'

open_api_server_environments_getenvironments:
    path:     /api/program/{programId}/environments
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.environments:getEnvironmentsAction
    requirements:
        programId: '[a-z0-9]+'

# pipelineExecution
open_api_server_pipelineExecution_advancepipelineexecution:
    path:     /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/advance
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.pipelineExecution:advancePipelineExecutionAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'
        executionId: '[a-z0-9]+'
        phaseId: '[a-z0-9]+'
        stepId: '[a-z0-9]+'

open_api_server_pipelineExecution_cancelpipelineexecutionstep:
    path:     /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/cancel
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.pipelineExecution:cancelPipelineExecutionStepAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'
        executionId: '[a-z0-9]+'
        phaseId: '[a-z0-9]+'
        stepId: '[a-z0-9]+'

open_api_server_pipelineExecution_getcurrentexecution:
    path:     /api/program/{programId}/pipeline/{pipelineId}/execution
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.pipelineExecution:getCurrentExecutionAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'

open_api_server_pipelineExecution_getexecution:
    path:     /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.pipelineExecution:getExecutionAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'
        executionId: '[a-z0-9]+'

open_api_server_pipelineExecution_getexecutions:
    path:     /api/program/{programId}/pipeline/{pipelineId}/executions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.pipelineExecution:getExecutionsAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'

open_api_server_pipelineExecution_getsteplogs:
    path:     /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/logs
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.pipelineExecution:getStepLogsAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'
        executionId: '[a-z0-9]+'
        phaseId: '[a-z0-9]+'
        stepId: '[a-z0-9]+'

open_api_server_pipelineExecution_startpipeline:
    path:     /api/program/{programId}/pipeline/{pipelineId}/execution
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.pipelineExecution:startPipelineAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'

open_api_server_pipelineExecution_stepmetric:
    path:     /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/metrics
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.pipelineExecution:stepMetricAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'
        executionId: '[a-z0-9]+'
        phaseId: '[a-z0-9]+'
        stepId: '[a-z0-9]+'

open_api_server_pipelineExecution_stepstate:
    path:     /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.pipelineExecution:stepStateAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'
        executionId: '[a-z0-9]+'
        phaseId: '[a-z0-9]+'
        stepId: '[a-z0-9]+'

# pipelines
open_api_server_pipelines_deletepipeline:
    path:     /api/program/{programId}/pipeline/{pipelineId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.pipelines:deletePipelineAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'

open_api_server_pipelines_getpipeline:
    path:     /api/program/{programId}/pipeline/{pipelineId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.pipelines:getPipelineAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'

open_api_server_pipelines_getpipelines:
    path:     /api/program/{programId}/pipelines
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.pipelines:getPipelinesAction
    requirements:
        programId: '[a-z0-9]+'

open_api_server_pipelines_patchpipeline:
    path:     /api/program/{programId}/pipeline/{pipelineId}
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.pipelines:patchPipelineAction
    requirements:
        programId: '[a-z0-9]+'
        pipelineId: '[a-z0-9]+'

# programs
open_api_server_programs_deleteprogram:
    path:     /api/program/{programId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.programs:deleteProgramAction
    requirements:
        programId: '[a-z0-9]+'

open_api_server_programs_getprogram:
    path:     /api/program/{programId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.programs:getProgramAction
    requirements:
        programId: '[a-z0-9]+'

open_api_server_programs_getprograms:
    path:     /api/programs
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.programs:getProgramsAction

# repositories
open_api_server_repositories_getrepositories:
    path:     /api/program/{programId}/repositories
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.repositories:getRepositoriesAction
    requirements:
        programId: '[a-z0-9]+'

open_api_server_repositories_getrepository:
    path:     /api/program/{programId}/repository/{repositoryId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.repositories:getRepositoryAction
    requirements:
        programId: '[a-z0-9]+'
        repositoryId: '[a-z0-9]+'

# variables
open_api_server_variables_getenvironmentvariables:
    path:     /api/program/{programId}/environment/{environmentId}/variables
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.variables:getEnvironmentVariablesAction
    requirements:
        programId: '[a-z0-9]+'
        environmentId: '[a-z0-9]+'

open_api_server_variables_patchenvironmentvariables:
    path:     /api/program/{programId}/environment/{environmentId}/variables
    methods:  [PATCH]
    defaults:
        _controller: open_api_server.controller.variables:patchEnvironmentVariablesAction
    requirements:
        programId: '[a-z0-9]+'
        environmentId: '[a-z0-9]+'

