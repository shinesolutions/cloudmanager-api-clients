<?php
/**
 * EnvironmentsApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\BadRequestError;
use OpenAPI\Server\Model\Environment;
use OpenAPI\Server\Model\EnvironmentList;
use OpenAPI\Server\Model\EnvironmentLogs;

/**
 * EnvironmentsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface EnvironmentsApiInterface
{

    /**
     * Operation deleteEnvironment
     *
     * DeleteEnvironment
     *
     * @param  string $programId  Identifier of the application (required)
     * @param  string $environmentId  Identifier of the environment (required)
     * @param  string $xGwImsOrgId  IMS organization ID that the request is being made under. (required)
     * @param  string $authorization  Bearer [token] - An access token for the technical account created through integration with Adobe IO (required)
     * @param  string $xApiKey  IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\Environment
     *
     */
    public function deleteEnvironment($programId, $environmentId, $xGwImsOrgId, $authorization, $xApiKey, &$responseCode, array &$responseHeaders);

    /**
     * Operation downloadLogs
     *
     * Download Logs
     *
     * @param  string $programId  Identifier of the program (required)
     * @param  string $environmentId  Identifier of the environment (required)
     * @param  string $service  Name of service (required)
     * @param  string $name  Name of log (required)
     * @param  string $date  date for which log is required (required)
     * @param  string $xGwImsOrgId  IMS organization ID that the request is being made under. (required)
     * @param  string $authorization  Bearer [token] - An access token for the technical account created through integration with Adobe IO (required)
     * @param  string $xApiKey  IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io (required)
     * @param  string $accept  Specify application/json in this header to receive a JSON response. Otherwise, a 307 response code will be returned with a Location header. (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function downloadLogs($programId, $environmentId, $service, $name, $date, $xGwImsOrgId, $authorization, $xApiKey, $accept = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation getEnvironment
     *
     * Get Environment
     *
     * @param  string $programId  Identifier of the program (required)
     * @param  string $environmentId  Identifier of the environment (required)
     * @param  string $xGwImsOrgId  IMS organization ID that the request is being made under. (required)
     * @param  string $authorization  Bearer [token] - An access token for the technical account created through integration with Adobe IO (required)
     * @param  string $xApiKey  IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\Environment
     *
     */
    public function getEnvironment($programId, $environmentId, $xGwImsOrgId, $authorization, $xApiKey, &$responseCode, array &$responseHeaders);

    /**
     * Operation getEnvironmentLogs
     *
     * Get Environment Logs
     *
     * @param  string $programId  Identifier of the program (required)
     * @param  string $environmentId  Identifier of the environment (required)
     * @param  int $days  number of days for which logs are required (required)
     * @param  string $xGwImsOrgId  IMS organization ID that the request is being made under. (required)
     * @param  string $authorization  Bearer [token] - An access token for the technical account created through integration with Adobe IO (required)
     * @param  string $xApiKey  IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io (required)
     * @param  string[] $service  Names of services (optional)
     * @param  string[] $name  Names of log (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\EnvironmentLogs
     *
     */
    public function getEnvironmentLogs($programId, $environmentId, $days, $xGwImsOrgId, $authorization, $xApiKey, array $service = null, array $name = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation getEnvironments
     *
     * List Environments
     *
     * @param  string $programId  Identifier of the program (required)
     * @param  string $xGwImsOrgId  IMS organization ID that the request is being made under. (required)
     * @param  string $authorization  Bearer [token] - An access token for the technical account created through integration with Adobe IO (required)
     * @param  string $xApiKey  IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io (required)
     * @param  string $type  Type of the environment (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\EnvironmentList
     *
     */
    public function getEnvironments($programId, $xGwImsOrgId, $authorization, $xApiKey, $type = null, &$responseCode, array &$responseHeaders);
}
