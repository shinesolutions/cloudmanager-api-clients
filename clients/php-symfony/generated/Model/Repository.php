<?php
/**
 * Repository
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Repository model.
 *
 * A sourcecode repository
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class Repository 
{
        /**
     * Repository name
     *
     * @var string|null
     * @SerializedName("repo")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $repo;

    /**
     * description
     *
     * @var string|null
     * @SerializedName("description")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $description;

    /**
     * @var OpenAPI\Server\Model\RepositoryLinks|null
     * @SerializedName("_links")
     * @Assert\Type("OpenAPI\Server\Model\RepositoryLinks")
     * @Type("OpenAPI\Server\Model\RepositoryLinks")
     */
    protected $links;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->repo = isset($data['repo']) ? $data['repo'] : null;
        $this->description = isset($data['description']) ? $data['description'] : null;
        $this->links = isset($data['links']) ? $data['links'] : null;
    }

    /**
     * Gets repo.
     *
     * @return string|null
     */
    public function getRepo()
    {
        return $this->repo;
    }

    /**
     * Sets repo.
     *
     * @param string|null $repo  Repository name
     *
     * @return $this
     */
    public function setRepo($repo = null)
    {
        $this->repo = $repo;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Sets description.
     *
     * @param string|null $description  description
     *
     * @return $this
     */
    public function setDescription($description = null)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets links.
     *
     * @return OpenAPI\Server\Model\RepositoryLinks|null
     */
    public function getLinks(): ?RepositoryLinks
    {
        return $this->links;
    }

    /**
     * Sets links.
     *
     * @param OpenAPI\Server\Model\RepositoryLinks|null $links
     *
     * @return $this
     */
    public function setLinks(RepositoryLinks $links = null): ?RepositoryLinks
    {
        $this->links = $links;

        return $this;
    }
}


