<?php
/**
 * EmbeddedProgram
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the EmbeddedProgram model.
 *
 * Describes an __Embedded Program__
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class EmbeddedProgram 
{
        /**
     * Identifier of the program. Unique within the space.
     *
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $id;

    /**
     * Name of the program
     *
     * @var string|null
     * @SerializedName("name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * Whether this Program has been enabled for Cloud Manager usage
     *
     * @var bool|null
     * @SerializedName("enabled")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $enabled;

    /**
     * Tenant Id
     *
     * @var string|null
     * @SerializedName("tenantId")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $tenantId;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->enabled = isset($data['enabled']) ? $data['enabled'] : false;
        $this->tenantId = isset($data['tenantId']) ? $data['tenantId'] : null;
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param string|null $id  Identifier of the program. Unique within the space.
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name  Name of the program
     *
     * @return $this
     */
    public function setName($name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets enabled.
     *
     * @return bool|null
     */
    public function isEnabled()
    {
        return $this->enabled;
    }

    /**
     * Sets enabled.
     *
     * @param bool|null $enabled  Whether this Program has been enabled for Cloud Manager usage
     *
     * @return $this
     */
    public function setEnabled($enabled = null)
    {
        $this->enabled = $enabled;

        return $this;
    }

    /**
     * Gets tenantId.
     *
     * @return string|null
     */
    public function getTenantId()
    {
        return $this->tenantId;
    }

    /**
     * Sets tenantId.
     *
     * @param string|null $tenantId  Tenant Id
     *
     * @return $this
     */
    public function setTenantId($tenantId = null)
    {
        $this->tenantId = $tenantId;

        return $this;
    }
}


