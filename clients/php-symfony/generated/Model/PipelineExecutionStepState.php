<?php
/**
 * PipelineExecutionStepState
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Cloud Manager API
 *
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PipelineExecutionStepState model.
 *
 * Describes the status of a particular pipeline execution step for display purposes
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class PipelineExecutionStepState 
{
        /**
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $id;

    /**
     * @var string|null
     * @SerializedName("stepId")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $stepId;

    /**
     * @var string|null
     * @SerializedName("phaseId")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $phaseId;

    /**
     * Name of the action
     *
     * @var string|null
     * @SerializedName("action")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $action;

    /**
     * Target repository
     *
     * @var string|null
     * @SerializedName("repository")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $repository;

    /**
     * Target branch
     *
     * @var string|null
     * @SerializedName("branch")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $branch;

    /**
     * Target environment
     *
     * @var string|null
     * @SerializedName("environment")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $environment;

    /**
     * Target environment type
     *
     * @var string|null
     * @SerializedName("environmentType")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $environmentType;

    /**
     * Start time
     *
     * @var \DateTime|null
     * @SerializedName("startedAt")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $startedAt;

    /**
     * Date the execution reached a final state
     *
     * @var \DateTime|null
     * @SerializedName("finishedAt")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $finishedAt;

    /**
     * Information about step result
     *
     * @var array[]|null
     * @SerializedName("details")
     * @Assert\All({
     *   @Assert\Type("array")
     * })
     * @Type("array<string, array>")
     */
    protected $details;

    /**
     * Action status
     *
     * @var string|null
     * @SerializedName("status")
     * @Assert\Choice({ "NOT_STARTED", "RUNNING", "FINISHED", "ERROR", "ROLLING_BACK", "ROLLED_BACK", "WAITING", "CANCELLED", "FAILED" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $status;

    /**
     * @var OpenAPI\Server\Model\PipelineExecutionStepStateLinks|null
     * @SerializedName("_links")
     * @Assert\Type("OpenAPI\Server\Model\PipelineExecutionStepStateLinks")
     * @Type("OpenAPI\Server\Model\PipelineExecutionStepStateLinks")
     */
    protected $links;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->stepId = isset($data['stepId']) ? $data['stepId'] : null;
        $this->phaseId = isset($data['phaseId']) ? $data['phaseId'] : null;
        $this->action = isset($data['action']) ? $data['action'] : null;
        $this->repository = isset($data['repository']) ? $data['repository'] : null;
        $this->branch = isset($data['branch']) ? $data['branch'] : null;
        $this->environment = isset($data['environment']) ? $data['environment'] : null;
        $this->environmentType = isset($data['environmentType']) ? $data['environmentType'] : null;
        $this->startedAt = isset($data['startedAt']) ? $data['startedAt'] : null;
        $this->finishedAt = isset($data['finishedAt']) ? $data['finishedAt'] : null;
        $this->details = isset($data['details']) ? $data['details'] : null;
        $this->status = isset($data['status']) ? $data['status'] : null;
        $this->links = isset($data['links']) ? $data['links'] : null;
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param string|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets stepId.
     *
     * @return string|null
     */
    public function getStepId()
    {
        return $this->stepId;
    }

    /**
     * Sets stepId.
     *
     * @param string|null $stepId
     *
     * @return $this
     */
    public function setStepId($stepId = null)
    {
        $this->stepId = $stepId;

        return $this;
    }

    /**
     * Gets phaseId.
     *
     * @return string|null
     */
    public function getPhaseId()
    {
        return $this->phaseId;
    }

    /**
     * Sets phaseId.
     *
     * @param string|null $phaseId
     *
     * @return $this
     */
    public function setPhaseId($phaseId = null)
    {
        $this->phaseId = $phaseId;

        return $this;
    }

    /**
     * Gets action.
     *
     * @return string|null
     */
    public function getAction()
    {
        return $this->action;
    }

    /**
     * Sets action.
     *
     * @param string|null $action  Name of the action
     *
     * @return $this
     */
    public function setAction($action = null)
    {
        $this->action = $action;

        return $this;
    }

    /**
     * Gets repository.
     *
     * @return string|null
     */
    public function getRepository()
    {
        return $this->repository;
    }

    /**
     * Sets repository.
     *
     * @param string|null $repository  Target repository
     *
     * @return $this
     */
    public function setRepository($repository = null)
    {
        $this->repository = $repository;

        return $this;
    }

    /**
     * Gets branch.
     *
     * @return string|null
     */
    public function getBranch()
    {
        return $this->branch;
    }

    /**
     * Sets branch.
     *
     * @param string|null $branch  Target branch
     *
     * @return $this
     */
    public function setBranch($branch = null)
    {
        $this->branch = $branch;

        return $this;
    }

    /**
     * Gets environment.
     *
     * @return string|null
     */
    public function getEnvironment()
    {
        return $this->environment;
    }

    /**
     * Sets environment.
     *
     * @param string|null $environment  Target environment
     *
     * @return $this
     */
    public function setEnvironment($environment = null)
    {
        $this->environment = $environment;

        return $this;
    }

    /**
     * Gets environmentType.
     *
     * @return string|null
     */
    public function getEnvironmentType()
    {
        return $this->environmentType;
    }

    /**
     * Sets environmentType.
     *
     * @param string|null $environmentType  Target environment type
     *
     * @return $this
     */
    public function setEnvironmentType($environmentType = null)
    {
        $this->environmentType = $environmentType;

        return $this;
    }

    /**
     * Gets startedAt.
     *
     * @return \DateTime|null
     */
    public function getStartedAt(): ?\DateTime
    {
        return $this->startedAt;
    }

    /**
     * Sets startedAt.
     *
     * @param \DateTime|null $startedAt  Start time
     *
     * @return $this
     */
    public function setStartedAt(\DateTime $startedAt = null): ?\DateTime
    {
        $this->startedAt = $startedAt;

        return $this;
    }

    /**
     * Gets finishedAt.
     *
     * @return \DateTime|null
     */
    public function getFinishedAt(): ?\DateTime
    {
        return $this->finishedAt;
    }

    /**
     * Sets finishedAt.
     *
     * @param \DateTime|null $finishedAt  Date the execution reached a final state
     *
     * @return $this
     */
    public function setFinishedAt(\DateTime $finishedAt = null): ?\DateTime
    {
        $this->finishedAt = $finishedAt;

        return $this;
    }

    /**
     * Gets details.
     *
     * @return array[]|null
     */
    public function getDetails(): ?array
    {
        return $this->details;
    }

    /**
     * Sets details.
     *
     * @param array[]|null $details  Information about step result
     *
     * @return $this
     */
    public function setDetails(array $details = null): ?array
    {
        $this->details = $details;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Sets status.
     *
     * @param string|null $status  Action status
     *
     * @return $this
     */
    public function setStatus($status = null)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets links.
     *
     * @return OpenAPI\Server\Model\PipelineExecutionStepStateLinks|null
     */
    public function getLinks(): ?PipelineExecutionStepStateLinks
    {
        return $this->links;
    }

    /**
     * Sets links.
     *
     * @param OpenAPI\Server\Model\PipelineExecutionStepStateLinks|null $links
     *
     * @return $this
     */
    public function setLinks(PipelineExecutionStepStateLinks $links = null): ?PipelineExecutionStepStateLinks
    {
        $this->links = $links;

        return $this;
    }
}


