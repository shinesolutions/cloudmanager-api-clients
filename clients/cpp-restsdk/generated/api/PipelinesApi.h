/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PipelinesApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_PipelinesApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_PipelinesApi_H_


#include "../ApiClient.h"

#include "Pipeline.h"
#include "PipelineList.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  PipelinesApi 
{
public:

    explicit PipelinesApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~PipelinesApi();

    /// <summary>
    /// Delete a Pipeline
    /// </summary>
    /// <remarks>
    /// Delete a pipeline. All the data is wiped.
    /// </remarks>
    /// <param name="programId">Identifier of the program</param>
    /// <param name="pipelineId">Identifier of the pipeline</param>
    /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
    /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
    /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
    pplx::task<void> deletePipeline(
        utility::string_t programId,
        utility::string_t pipelineId,
        utility::string_t xGwImsOrgId,
        utility::string_t authorization,
        utility::string_t xApiKey
    ) const;
    /// <summary>
    /// Get Pipeline
    /// </summary>
    /// <remarks>
    /// Returns a pipeline by its id
    /// </remarks>
    /// <param name="programId">Identifier of the program</param>
    /// <param name="pipelineId">Identifier of the pipeline</param>
    /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
    /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
    /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
    pplx::task<std::shared_ptr<Pipeline>> getPipeline(
        utility::string_t programId,
        utility::string_t pipelineId,
        utility::string_t xGwImsOrgId,
        utility::string_t authorization,
        utility::string_t xApiKey
    ) const;
    /// <summary>
    /// List Pipelines
    /// </summary>
    /// <remarks>
    /// Returns all the pipelines that the requesting user has access to in an program
    /// </remarks>
    /// <param name="programId">Identifier of the program</param>
    /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
    /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
    /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
    pplx::task<std::shared_ptr<PipelineList>> getPipelines(
        utility::string_t programId,
        utility::string_t xGwImsOrgId,
        utility::string_t authorization,
        utility::string_t xApiKey
    ) const;
    /// <summary>
    /// Patches Pipeline
    /// </summary>
    /// <remarks>
    /// Patches a pipeline within an program.
    /// </remarks>
    /// <param name="programId">Identifier of the program</param>
    /// <param name="pipelineId">Identifier of the pipeline</param>
    /// <param name="xGwImsOrgId">IMS organization ID that the request is being made under.</param>
    /// <param name="authorization">Bearer [token] - An access token for the technical account created through integration with Adobe IO</param>
    /// <param name="xApiKey">IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io</param>
    /// <param name="contentType">Must always be application/json</param>
    /// <param name="body">The updated Pipeline</param>
    pplx::task<std::shared_ptr<Pipeline>> patchPipeline(
        utility::string_t programId,
        utility::string_t pipelineId,
        utility::string_t xGwImsOrgId,
        utility::string_t authorization,
        utility::string_t xApiKey,
        utility::string_t contentType,
        std::shared_ptr<Pipeline> body
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_PipelinesApi_H_ */

