# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class HalLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, href=None, templated=False, type=None, deprecation=None, profile=None, title=None, hreflang=None, name=None):  # noqa: E501
        """HalLink - a model defined in OpenAPI

        :param href: The href of this HalLink.  # noqa: E501
        :type href: str
        :param templated: The templated of this HalLink.  # noqa: E501
        :type templated: bool
        :param type: The type of this HalLink.  # noqa: E501
        :type type: str
        :param deprecation: The deprecation of this HalLink.  # noqa: E501
        :type deprecation: str
        :param profile: The profile of this HalLink.  # noqa: E501
        :type profile: str
        :param title: The title of this HalLink.  # noqa: E501
        :type title: str
        :param hreflang: The hreflang of this HalLink.  # noqa: E501
        :type hreflang: str
        :param name: The name of this HalLink.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'href': str,
            'templated': bool,
            'type': str,
            'deprecation': str,
            'profile': str,
            'title': str,
            'hreflang': str,
            'name': str
        }

        self.attribute_map = {
            'href': 'href',
            'templated': 'templated',
            'type': 'type',
            'deprecation': 'deprecation',
            'profile': 'profile',
            'title': 'title',
            'hreflang': 'hreflang',
            'name': 'name'
        }

        self._href = href
        self._templated = templated
        self._type = type
        self._deprecation = deprecation
        self._profile = profile
        self._title = title
        self._hreflang = hreflang
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'HalLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HalLink of this HalLink.  # noqa: E501
        :rtype: HalLink
        """
        return util.deserialize_model(dikt, cls)

    @property
    def href(self):
        """Gets the href of this HalLink.


        :return: The href of this HalLink.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this HalLink.


        :param href: The href of this HalLink.
        :type href: str
        """

        self._href = href

    @property
    def templated(self):
        """Gets the templated of this HalLink.


        :return: The templated of this HalLink.
        :rtype: bool
        """
        return self._templated

    @templated.setter
    def templated(self, templated):
        """Sets the templated of this HalLink.


        :param templated: The templated of this HalLink.
        :type templated: bool
        """

        self._templated = templated

    @property
    def type(self):
        """Gets the type of this HalLink.


        :return: The type of this HalLink.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this HalLink.


        :param type: The type of this HalLink.
        :type type: str
        """

        self._type = type

    @property
    def deprecation(self):
        """Gets the deprecation of this HalLink.


        :return: The deprecation of this HalLink.
        :rtype: str
        """
        return self._deprecation

    @deprecation.setter
    def deprecation(self, deprecation):
        """Sets the deprecation of this HalLink.


        :param deprecation: The deprecation of this HalLink.
        :type deprecation: str
        """

        self._deprecation = deprecation

    @property
    def profile(self):
        """Gets the profile of this HalLink.


        :return: The profile of this HalLink.
        :rtype: str
        """
        return self._profile

    @profile.setter
    def profile(self, profile):
        """Sets the profile of this HalLink.


        :param profile: The profile of this HalLink.
        :type profile: str
        """

        self._profile = profile

    @property
    def title(self):
        """Gets the title of this HalLink.


        :return: The title of this HalLink.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this HalLink.


        :param title: The title of this HalLink.
        :type title: str
        """

        self._title = title

    @property
    def hreflang(self):
        """Gets the hreflang of this HalLink.


        :return: The hreflang of this HalLink.
        :rtype: str
        """
        return self._hreflang

    @hreflang.setter
    def hreflang(self, hreflang):
        """Sets the hreflang of this HalLink.


        :param hreflang: The hreflang of this HalLink.
        :type hreflang: str
        """

        self._hreflang = hreflang

    @property
    def name(self):
        """Gets the name of this HalLink.


        :return: The name of this HalLink.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this HalLink.


        :param name: The name of this HalLink.
        :type name: str
        """

        self._name = name
