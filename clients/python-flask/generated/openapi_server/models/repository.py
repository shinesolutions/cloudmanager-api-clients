# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.repository_links import RepositoryLinks
from openapi_server import util

from openapi_server.models.repository_links import RepositoryLinks  # noqa: E501

class Repository(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, repo=None, description=None, links=None):  # noqa: E501
        """Repository - a model defined in OpenAPI

        :param repo: The repo of this Repository.  # noqa: E501
        :type repo: str
        :param description: The description of this Repository.  # noqa: E501
        :type description: str
        :param links: The links of this Repository.  # noqa: E501
        :type links: RepositoryLinks
        """
        self.openapi_types = {
            'repo': str,
            'description': str,
            'links': RepositoryLinks
        }

        self.attribute_map = {
            'repo': 'repo',
            'description': 'description',
            'links': '_links'
        }

        self._repo = repo
        self._description = description
        self._links = links

    @classmethod
    def from_dict(cls, dikt) -> 'Repository':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Repository of this Repository.  # noqa: E501
        :rtype: Repository
        """
        return util.deserialize_model(dikt, cls)

    @property
    def repo(self):
        """Gets the repo of this Repository.

        Repository name  # noqa: E501

        :return: The repo of this Repository.
        :rtype: str
        """
        return self._repo

    @repo.setter
    def repo(self, repo):
        """Sets the repo of this Repository.

        Repository name  # noqa: E501

        :param repo: The repo of this Repository.
        :type repo: str
        """

        self._repo = repo

    @property
    def description(self):
        """Gets the description of this Repository.

        description  # noqa: E501

        :return: The description of this Repository.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Repository.

        description  # noqa: E501

        :param description: The description of this Repository.
        :type description: str
        """

        self._description = description

    @property
    def links(self):
        """Gets the links of this Repository.


        :return: The links of this Repository.
        :rtype: RepositoryLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Repository.


        :param links: The links of this Repository.
        :type links: RepositoryLinks
        """

        self._links = links
