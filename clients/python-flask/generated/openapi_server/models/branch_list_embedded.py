# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.repository_branch import RepositoryBranch
from openapi_server import util

from openapi_server.models.repository_branch import RepositoryBranch  # noqa: E501

class BranchListEmbedded(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, branches=None):  # noqa: E501
        """BranchListEmbedded - a model defined in OpenAPI

        :param branches: The branches of this BranchListEmbedded.  # noqa: E501
        :type branches: List[RepositoryBranch]
        """
        self.openapi_types = {
            'branches': List[RepositoryBranch]
        }

        self.attribute_map = {
            'branches': 'branches'
        }

        self._branches = branches

    @classmethod
    def from_dict(cls, dikt) -> 'BranchListEmbedded':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The branchList__embedded of this BranchListEmbedded.  # noqa: E501
        :rtype: BranchListEmbedded
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branches(self):
        """Gets the branches of this BranchListEmbedded.


        :return: The branches of this BranchListEmbedded.
        :rtype: List[RepositoryBranch]
        """
        return self._branches

    @branches.setter
    def branches(self, branches):
        """Sets the branches of this BranchListEmbedded.


        :param branches: The branches of this BranchListEmbedded.
        :type branches: List[RepositoryBranch]
        """

        self._branches = branches
