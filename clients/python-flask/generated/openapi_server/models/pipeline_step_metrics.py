# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.metric import Metric
from openapi_server import util

from openapi_server.models.metric import Metric  # noqa: E501

class PipelineStepMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metrics=None):  # noqa: E501
        """PipelineStepMetrics - a model defined in OpenAPI

        :param metrics: The metrics of this PipelineStepMetrics.  # noqa: E501
        :type metrics: List[Metric]
        """
        self.openapi_types = {
            'metrics': List[Metric]
        }

        self.attribute_map = {
            'metrics': 'metrics'
        }

        self._metrics = metrics

    @classmethod
    def from_dict(cls, dikt) -> 'PipelineStepMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The pipelineStepMetrics of this PipelineStepMetrics.  # noqa: E501
        :rtype: PipelineStepMetrics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metrics(self):
        """Gets the metrics of this PipelineStepMetrics.

        metrics  # noqa: E501

        :return: The metrics of this PipelineStepMetrics.
        :rtype: List[Metric]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this PipelineStepMetrics.

        metrics  # noqa: E501

        :param metrics: The metrics of this PipelineStepMetrics.
        :type metrics: List[Metric]
        """

        self._metrics = metrics
