# -*- encoding: utf-8 -*-

=begin
#Cloud Manager API

#This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.

The version of the OpenAPI document: 1.0.0
Contact: opensource@shinesolutions.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1-SNAPSHOT

=end

$:.push File.expand_path("../lib", __FILE__)
require "ruby_aem_cloudmanager_api_client/version"

Gem::Specification.new do |s|
  s.name        = "ruby_aem_cloudmanager_api_client"
  s.version     = AemCloudManagerApiClient::VERSION
  s.platform    = Gem::Platform::RUBY
  s.authors     = ["Shine Solutions"]
  s.email       = ["opensource@shinesolutions.com"]
  s.homepage    = "https://github.com/shinesolutions/cloudmanager-api-clients/tree/master/clients/ruby"
  s.summary     = "Cloud Manager API Ruby Gem"
  s.description = "This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml."
  s.license     = 'Apache-2.0'
  s.required_ruby_version = ">= 2.1"

  s.add_runtime_dependency 'typhoeus', '~> 1.0', '>= 1.0.1'
  s.add_runtime_dependency 'json', '~> 2.1', '>= 2.1.0'

  s.add_development_dependency 'rspec', '~> 3.6', '>= 3.6.0'

  s.files         = `find *`.split("\n").uniq.sort.select { |f| !f.empty? }
  s.test_files    = `find spec/*`.split("\n")
  s.executables   = []
  s.require_paths = ["lib"]
end
