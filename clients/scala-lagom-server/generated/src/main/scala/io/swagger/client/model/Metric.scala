/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.model
import play.api.libs.json._

case class Metric (
            /* KPI result identifier */
                  id: Option[String],
                  severity:  Option[MetricSeverityEnum.MetricSeverityEnum],
            /* Whether metric is considered passed */
                  passed: Option[Boolean],
            /* Whether user override the failed metric */
                  `override`: Option[Boolean],
            /* Expected value for the metric */
                  actualValue: Option[String],
            /* Expected value for the metric */
                  expectedValue: Option[String],
                  comparator:  Option[MetricComparatorEnum.MetricComparatorEnum],
            /* KPI identifier */
                  kpi: Option[String]
)

object Metric {
implicit val format: Format[Metric] = Json.format
}

object MetricSeverityEnum extends Enumeration {
  val   critical, important, informational = Value
  type MetricSeverityEnum = Value
  implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[MetricSeverityEnum.type])
}
object MetricComparatorEnum extends Enumeration {
  val   GT, GTE, LT, LTE, EQ, NEQ = Value
  type MetricComparatorEnum = Value
  implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[MetricComparatorEnum.type])
}
