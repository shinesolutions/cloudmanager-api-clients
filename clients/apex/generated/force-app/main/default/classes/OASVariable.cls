/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A named value than can be set on an Environment
 */
public class OASVariable implements OAS.MappedProperties {
    /**
     * Name of the variable. Of a-z, A-Z, _ and 0-9 Cannot begin with a number.
     * @return name
     */
    public String name { get; set; }

    /**
     * Value of the variable. Read-Write for non-secrets, write-only for secrets.
     * @return value
     */
    public String value { get; set; }

    /**
     * Type of the variable. Default `string` if missing. Cannot be changed after creation.
     */
    public enum RTypeEnum {
        STRING,
        SECRETSTRING
    }

    /**
     * Type of the variable. Default `string` if missing. Cannot be changed after creation.
     * @return r_type
     */
    public RTypeEnum r_type { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'type' => 'r_type'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASVariable getExample() {
        OASVariable variable = new OASVariable();
          variable.name = 'MY_VAR1';
          variable.value = 'myValue';
          variable.r_type = RTypeEnum.STRING;
        return variable;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASVariable) {           
            OASVariable variable = (OASVariable) obj;
            return this.name == variable.name
                && this.value == variable.value
                && this.r_type == variable.r_type;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (value == null ? 0 : System.hashCode(value));
        hashCode = (17 * hashCode) + (r_type == null ? 0 : System.hashCode(r_type));
        return hashCode;
    }
}

