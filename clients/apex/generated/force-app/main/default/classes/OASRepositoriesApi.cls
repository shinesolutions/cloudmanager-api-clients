/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASRepositoriesApi {
    OASClient client;

    public OASRepositoriesApi(OASClient client) {
        this.client = client;
    }

    public OASRepositoriesApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Lists Repositories
     * Lists all Repositories in an program
     * @param programId Identifier of the program (required)
     * @param xGwImsOrgId IMS organization ID that the request is being made under. (required)
     * @param authorization Bearer [token] - An access token for the technical account created through integration with Adobe IO (required)
     * @param xApiKey IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io (required)
     * @return OASRepositoryList
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRepositoryList getRepositories(Map<String, Object> params) {
        client.assertNotNull(params.get('programId'), 'programId');
        client.assertNotNull(params.get('xGwImsOrgId'), 'xGwImsOrgId');
        client.assertNotNull(params.get('authorization'), 'authorization');
        client.assertNotNull(params.get('xApiKey'), 'xApiKey');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRepositoryList) client.invoke(
            'GET', '/api/program/{programId}/repositories', '',
            query, form,
            new Map<String, Object>{
                'programId' => (String) params.get('programId')
            },
            new Map<String, Object>{
                'x-gw-ims-org-id' => (String) params.get('xGwImsOrgId'),
                'Authorization' => (String) params.get('authorization'),
                'x-api-key' => (String) params.get('xApiKey')
            },
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            OASRepositoryList.class
        );
    }
    /**
     * Get Repository
     * Returns an repository by its id
     * @param programId Identifier of the program (required)
     * @param repositoryId Identifier of the repository (required)
     * @param xGwImsOrgId IMS organization ID that the request is being made under. (required)
     * @param authorization Bearer [token] - An access token for the technical account created through integration with Adobe IO (required)
     * @param xApiKey IMS Client ID (API Key) which is subscribed to consume services on console.adobe.io (required)
     * @return OASRepository
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRepository getRepository(Map<String, Object> params) {
        client.assertNotNull(params.get('programId'), 'programId');
        client.assertNotNull(params.get('repositoryId'), 'repositoryId');
        client.assertNotNull(params.get('xGwImsOrgId'), 'xGwImsOrgId');
        client.assertNotNull(params.get('authorization'), 'authorization');
        client.assertNotNull(params.get('xApiKey'), 'xApiKey');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRepository) client.invoke(
            'GET', '/api/program/{programId}/repository/{repositoryId}', '',
            query, form,
            new Map<String, Object>{
                'programId' => (String) params.get('programId'),
                'repositoryId' => (String) params.get('repositoryId')
            },
            new Map<String, Object>{
                'x-gw-ims-org-id' => (String) params.get('xGwImsOrgId'),
                'Authorization' => (String) params.get('authorization'),
                'x-api-key' => (String) params.get('xApiKey')
            },
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            OASRepository.class
        );
    }
}
