/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Describes the status of a particular pipeline execution step for display purposes
 */
public class OASPipelineExecutionStepState implements OAS.MappedProperties {
    /**
     * Get id
     * @return id
     */
    public String id { get; set; }

    /**
     * Get stepId
     * @return stepId
     */
    public String stepId { get; set; }

    /**
     * Get phaseId
     * @return phaseId
     */
    public String phaseId { get; set; }

    /**
     * Name of the action
     * @return action
     */
    public String action { get; set; }

    /**
     * Target repository
     * @return repository
     */
    public String repository { get; set; }

    /**
     * Target branch
     * @return branch
     */
    public String branch { get; set; }

    /**
     * Target environment
     * @return environment
     */
    public String environment { get; set; }

    /**
     * Target environment type
     * @return environmentType
     */
    public String environmentType { get; set; }

    /**
     * Start time
     * @return startedAt
     */
    public Datetime startedAt { get; set; }

    /**
     * Date the execution reached a final state
     * @return finishedAt
     */
    public Datetime finishedAt { get; set; }

    /**
     * Information about step result
     * @return details
     */
    public Map<String, Object> details { get; set; }

    /**
     * Action status
     */
    public enum StatusEnum {
        NOT_STARTED,
        RUNNING,
        FINISHED,
        ERROR,
        ROLLING_BACK,
        ROLLED_BACK,
        WAITING,
        CANCELLED,
        FAILED
    }

    /**
     * Action status
     * @return status
     */
    public StatusEnum status { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASPipelineExecutionStepStateLinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASPipelineExecutionStepState() {
        details = new Map<String, Object>();
    }

    public static OASPipelineExecutionStepState getExample() {
        OASPipelineExecutionStepState pipelineExecutionStepState = new OASPipelineExecutionStepState();
          pipelineExecutionStepState.id = '';
          pipelineExecutionStepState.stepId = '';
          pipelineExecutionStepState.phaseId = '';
          pipelineExecutionStepState.action = 'build';
          pipelineExecutionStepState.repository = '';
          pipelineExecutionStepState.branch = '';
          pipelineExecutionStepState.environment = '';
          pipelineExecutionStepState.environmentType = '';
          pipelineExecutionStepState.startedAt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          pipelineExecutionStepState.finishedAt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          pipelineExecutionStepState.details = new Map<String, Object>{'key'=>null};
          pipelineExecutionStepState.status = StatusEnum.NOT_STARTED;
          pipelineExecutionStepState.links = OASPipelineExecutionStepStateLinks.getExample();
        return pipelineExecutionStepState;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPipelineExecutionStepState) {           
            OASPipelineExecutionStepState pipelineExecutionStepState = (OASPipelineExecutionStepState) obj;
            return this.id == pipelineExecutionStepState.id
                && this.stepId == pipelineExecutionStepState.stepId
                && this.phaseId == pipelineExecutionStepState.phaseId
                && this.action == pipelineExecutionStepState.action
                && this.repository == pipelineExecutionStepState.repository
                && this.branch == pipelineExecutionStepState.branch
                && this.environment == pipelineExecutionStepState.environment
                && this.environmentType == pipelineExecutionStepState.environmentType
                && this.startedAt == pipelineExecutionStepState.startedAt
                && this.finishedAt == pipelineExecutionStepState.finishedAt
                && this.details == pipelineExecutionStepState.details
                && this.status == pipelineExecutionStepState.status
                && this.links == pipelineExecutionStepState.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (stepId == null ? 0 : System.hashCode(stepId));
        hashCode = (17 * hashCode) + (phaseId == null ? 0 : System.hashCode(phaseId));
        hashCode = (17 * hashCode) + (action == null ? 0 : System.hashCode(action));
        hashCode = (17 * hashCode) + (repository == null ? 0 : System.hashCode(repository));
        hashCode = (17 * hashCode) + (branch == null ? 0 : System.hashCode(branch));
        hashCode = (17 * hashCode) + (environment == null ? 0 : System.hashCode(environment));
        hashCode = (17 * hashCode) + (environmentType == null ? 0 : System.hashCode(environmentType));
        hashCode = (17 * hashCode) + (startedAt == null ? 0 : System.hashCode(startedAt));
        hashCode = (17 * hashCode) + (finishedAt == null ? 0 : System.hashCode(finishedAt));
        hashCode = (17 * hashCode) + (details == null ? 0 : System.hashCode(details));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

