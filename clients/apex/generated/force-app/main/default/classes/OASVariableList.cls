/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASVariableList
 */
public class OASVariableList implements OAS.MappedProperties {
    /**
     * Get totalNumberOfItems
     * @return totalNumberOfItems
     */
    public Integer totalNumberOfItems { get; set; }

    /**
     * Get embedded
     * @return embedded
     */
    public OASVariableListEmbedded embedded { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASVariableListLinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_totalNumberOfItems' => 'totalNumberOfItems',
        '_embedded' => 'embedded',
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASVariableList getExample() {
        OASVariableList variableList = new OASVariableList();
          variableList.totalNumberOfItems = 1;
          variableList.embedded = OASVariableListEmbedded.getExample();
          variableList.links = OASVariableListLinks.getExample();
        return variableList;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASVariableList) {           
            OASVariableList variableList = (OASVariableList) obj;
            return this.totalNumberOfItems == variableList.totalNumberOfItems
                && this.embedded == variableList.embedded
                && this.links == variableList.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (totalNumberOfItems == null ? 0 : System.hashCode(totalNumberOfItems));
        hashCode = (17 * hashCode) + (embedded == null ? 0 : System.hashCode(embedded));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

