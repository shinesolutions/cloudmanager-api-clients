/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Describes a __Metric__
 */
public class OASMetric implements OAS.MappedProperties {
    /**
     * KPI result identifier
     * @return id
     */
    public String id { get; set; }

    /**
     * Severity of the metric
     */
    public enum SeverityEnum {
        CRITICAL,
        IMPORTANT,
        INFORMATIONAL
    }

    /**
     * Severity of the metric
     * @return severity
     */
    public SeverityEnum severity { get; set; }

    /**
     * Whether metric is considered passed
     * @return passed
     */
    public Boolean passed { get; set; }

    /**
     * Whether user override the failed metric
     * @return r_override
     */
    public Boolean r_override { get; set; }

    /**
     * Expected value for the metric
     * @return actualValue
     */
    public String actualValue { get; set; }

    /**
     * Expected value for the metric
     * @return expectedValue
     */
    public String expectedValue { get; set; }

    /**
     * Comparator used for the metric
     */
    public enum ComparatorEnum {
        GT,
        GTE,
        LT,
        LTE,
        EQ,
        NEQ
    }

    /**
     * Comparator used for the metric
     * @return comparator
     */
    public ComparatorEnum comparator { get; set; }

    /**
     * KPI identifier
     * @return kpi
     */
    public String kpi { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'override' => 'r_override'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASMetric() {
        passed = false;
        r_override = false;
    }

    public static OASMetric getExample() {
        OASMetric metric = new OASMetric();
          metric.id = '';
          metric.severity = SeverityEnum.CRITICAL;
          metric.passed = true;
          metric.r_override = true;
          metric.actualValue = '';
          metric.expectedValue = '';
          metric.comparator = ComparatorEnum.GT;
          metric.kpi = '';
        return metric;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMetric) {           
            OASMetric metric = (OASMetric) obj;
            return this.id == metric.id
                && this.severity == metric.severity
                && this.passed == metric.passed
                && this.r_override == metric.r_override
                && this.actualValue == metric.actualValue
                && this.expectedValue == metric.expectedValue
                && this.comparator == metric.comparator
                && this.kpi == metric.kpi;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (severity == null ? 0 : System.hashCode(severity));
        hashCode = (17 * hashCode) + (passed == null ? 0 : System.hashCode(passed));
        hashCode = (17 * hashCode) + (r_override == null ? 0 : System.hashCode(r_override));
        hashCode = (17 * hashCode) + (actualValue == null ? 0 : System.hashCode(actualValue));
        hashCode = (17 * hashCode) + (expectedValue == null ? 0 : System.hashCode(expectedValue));
        hashCode = (17 * hashCode) + (comparator == null ? 0 : System.hashCode(comparator));
        hashCode = (17 * hashCode) + (kpi == null ? 0 : System.hashCode(kpi));
        return hashCode;
    }
}

