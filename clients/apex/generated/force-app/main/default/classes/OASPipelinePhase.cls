/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Describes a phase of a pipeline
 */
public class OASPipelinePhase implements OAS.MappedProperties {
    /**
     * Name of the phase
     * @return name
     */
    public String name { get; set; }

    /**
     * Type of the phase
     */
    public enum RTypeEnum {
        VALIDATE,
        BUILD,
        DEPLOY
    }

    /**
     * Type of the phase
     * @return r_type
     */
    public RTypeEnum r_type { get; set; }

    /**
     * Identifier of the source repository. The code from this repository will be build at the start of this phase.\nMandatory if type=BUILD
     * @return repositoryId
     */
    public String repositoryId { get; set; }

    /**
     * Name of the tracked branch or a fully qualified git tag (e.g. refs/tags/v1).\n Assumed to be `master` if missing.
     * @return branch
     */
    public String branch { get; set; }

    /**
     * Identifier of the target environment. Mandatory if type=DEPLOY
     * @return environmentId
     */
    public String environmentId { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'type' => 'r_type'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASPipelinePhase getExample() {
        OASPipelinePhase pipelinePhase = new OASPipelinePhase();
          pipelinePhase.name = 'DEV Build';
          pipelinePhase.r_type = RTypeEnum.DEPLOY;
          pipelinePhase.repositoryId = '';
          pipelinePhase.branch = '';
          pipelinePhase.environmentId = '';
        return pipelinePhase;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPipelinePhase) {           
            OASPipelinePhase pipelinePhase = (OASPipelinePhase) obj;
            return this.name == pipelinePhase.name
                && this.r_type == pipelinePhase.r_type
                && this.repositoryId == pipelinePhase.repositoryId
                && this.branch == pipelinePhase.branch
                && this.environmentId == pipelinePhase.environmentId;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (r_type == null ? 0 : System.hashCode(r_type));
        hashCode = (17 * hashCode) + (repositoryId == null ? 0 : System.hashCode(repositoryId));
        hashCode = (17 * hashCode) + (branch == null ? 0 : System.hashCode(branch));
        hashCode = (17 * hashCode) + (environmentId == null ? 0 : System.hashCode(environmentId));
        return hashCode;
    }
}

