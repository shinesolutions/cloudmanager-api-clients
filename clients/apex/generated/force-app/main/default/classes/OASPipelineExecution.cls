/*
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Wraps a pipeline execution
 */
public class OASPipelineExecution implements OAS.MappedProperties {
    /**
     * Pipeline execution identifier
     * @return id
     */
    public String id { get; set; }

    /**
     * Identifier of the program. Unique within the space.
     * @return programId
     */
    public String programId { get; private set; }

    /**
     * Identifier of the pipeline. Unique within the space.
     * @return pipelineId
     */
    public String pipelineId { get; private set; }

    /**
     * Version of the artifacts generated during this execution
     * @return artifactsVersion
     */
    public String artifactsVersion { get; set; }

    /**
     * AdobeID who started the pipeline. Empty for auto triggered builds
     * @return user
     */
    public String user { get; set; }

    /**
     * Status of the execution
     */
    public enum StatusEnum {
        NOT_STARTED,
        RUNNING,
        CANCELLING,
        CANCELLED,
        FINISHED,
        ERROR,
        FAILED
    }

    /**
     * Status of the execution
     * @return status
     */
    public StatusEnum status { get; set; }

    /**
     * How the execution was triggered.
     */
    public enum RTriggerEnum {
        ON_COMMIT,
        MANUAL,
        SCHEDULE,
        PUSH_UPGRADES
    }

    /**
     * How the execution was triggered.
     * @return r_trigger
     */
    public RTriggerEnum r_trigger { get; set; }

    /**
     * Start time
     * @return createdAt
     */
    public Datetime createdAt { get; set; }

    /**
     * Date of last status change
     * @return updatedAt
     */
    public Datetime updatedAt { get; set; }

    /**
     * Date the execution reached a final state
     * @return finishedAt
     */
    public Datetime finishedAt { get; set; }

    /**
     * Get embedded
     * @return embedded
     */
    public OASPipelineExecutionEmbedded embedded { get; set; }

    /**
     * Get links
     * @return links
     */
    public OASPipelineExecutionLinks links { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'trigger' => 'r_trigger',
        '_embedded' => 'embedded',
        '_links' => 'links'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASPipelineExecution getExample() {
        OASPipelineExecution pipelineExecution = new OASPipelineExecution();
          pipelineExecution.id = '';
          pipelineExecution.programId = '14';
          pipelineExecution.pipelineId = '10';
          pipelineExecution.artifactsVersion = '';
          pipelineExecution.user = '0123456789ABCDE@AdobeID';
          pipelineExecution.status = StatusEnum.NOT_STARTED;
          pipelineExecution.r_trigger = RTriggerEnum.ON_COMMIT;
          pipelineExecution.createdAt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          pipelineExecution.updatedAt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          pipelineExecution.finishedAt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          pipelineExecution.embedded = OASPipelineExecutionEmbedded.getExample();
          pipelineExecution.links = OASPipelineExecutionLinks.getExample();
        return pipelineExecution;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPipelineExecution) {           
            OASPipelineExecution pipelineExecution = (OASPipelineExecution) obj;
            return this.id == pipelineExecution.id
                && this.programId == pipelineExecution.programId
                && this.pipelineId == pipelineExecution.pipelineId
                && this.artifactsVersion == pipelineExecution.artifactsVersion
                && this.user == pipelineExecution.user
                && this.status == pipelineExecution.status
                && this.r_trigger == pipelineExecution.r_trigger
                && this.createdAt == pipelineExecution.createdAt
                && this.updatedAt == pipelineExecution.updatedAt
                && this.finishedAt == pipelineExecution.finishedAt
                && this.embedded == pipelineExecution.embedded
                && this.links == pipelineExecution.links;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (programId == null ? 0 : System.hashCode(programId));
        hashCode = (17 * hashCode) + (pipelineId == null ? 0 : System.hashCode(pipelineId));
        hashCode = (17 * hashCode) + (artifactsVersion == null ? 0 : System.hashCode(artifactsVersion));
        hashCode = (17 * hashCode) + (user == null ? 0 : System.hashCode(user));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (r_trigger == null ? 0 : System.hashCode(r_trigger));
        hashCode = (17 * hashCode) + (createdAt == null ? 0 : System.hashCode(createdAt));
        hashCode = (17 * hashCode) + (updatedAt == null ? 0 : System.hashCode(updatedAt));
        hashCode = (17 * hashCode) + (finishedAt == null ? 0 : System.hashCode(finishedAt));
        hashCode = (17 * hashCode) + (embedded == null ? 0 : System.hashCode(embedded));
        hashCode = (17 * hashCode) + (links == null ? 0 : System.hashCode(links));
        return hashCode;
    }
}

