/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipelineExecutionEmbedded from './PipelineExecutionEmbedded';
import PipelineExecutionLinks from './PipelineExecutionLinks';

/**
 * The PipelineExecution model module.
 * @module model/PipelineExecution
 * @version 1.0.0
 */
class PipelineExecution {
    /**
     * Constructs a new <code>PipelineExecution</code>.
     * Wraps a pipeline execution
     * @alias module:model/PipelineExecution
     */
    constructor() { 
        
        PipelineExecution.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PipelineExecution</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipelineExecution} obj Optional instance to populate.
     * @return {module:model/PipelineExecution} The populated <code>PipelineExecution</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipelineExecution();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('programId')) {
                obj['programId'] = ApiClient.convertToType(data['programId'], 'String');
            }
            if (data.hasOwnProperty('pipelineId')) {
                obj['pipelineId'] = ApiClient.convertToType(data['pipelineId'], 'String');
            }
            if (data.hasOwnProperty('artifactsVersion')) {
                obj['artifactsVersion'] = ApiClient.convertToType(data['artifactsVersion'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('trigger')) {
                obj['trigger'] = ApiClient.convertToType(data['trigger'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
            if (data.hasOwnProperty('finishedAt')) {
                obj['finishedAt'] = ApiClient.convertToType(data['finishedAt'], 'Date');
            }
            if (data.hasOwnProperty('_embedded')) {
                obj['_embedded'] = PipelineExecutionEmbedded.constructFromObject(data['_embedded']);
            }
            if (data.hasOwnProperty('_links')) {
                obj['_links'] = PipelineExecutionLinks.constructFromObject(data['_links']);
            }
        }
        return obj;
    }


}

/**
 * Pipeline execution identifier
 * @member {String} id
 */
PipelineExecution.prototype['id'] = undefined;

/**
 * Identifier of the program. Unique within the space.
 * @member {String} programId
 */
PipelineExecution.prototype['programId'] = undefined;

/**
 * Identifier of the pipeline. Unique within the space.
 * @member {String} pipelineId
 */
PipelineExecution.prototype['pipelineId'] = undefined;

/**
 * Version of the artifacts generated during this execution
 * @member {String} artifactsVersion
 */
PipelineExecution.prototype['artifactsVersion'] = undefined;

/**
 * AdobeID who started the pipeline. Empty for auto triggered builds
 * @member {String} user
 */
PipelineExecution.prototype['user'] = undefined;

/**
 * Status of the execution
 * @member {module:model/PipelineExecution.StatusEnum} status
 */
PipelineExecution.prototype['status'] = undefined;

/**
 * How the execution was triggered.
 * @member {module:model/PipelineExecution.TriggerEnum} trigger
 */
PipelineExecution.prototype['trigger'] = undefined;

/**
 * Start time
 * @member {Date} createdAt
 */
PipelineExecution.prototype['createdAt'] = undefined;

/**
 * Date of last status change
 * @member {Date} updatedAt
 */
PipelineExecution.prototype['updatedAt'] = undefined;

/**
 * Date the execution reached a final state
 * @member {Date} finishedAt
 */
PipelineExecution.prototype['finishedAt'] = undefined;

/**
 * @member {module:model/PipelineExecutionEmbedded} _embedded
 */
PipelineExecution.prototype['_embedded'] = undefined;

/**
 * @member {module:model/PipelineExecutionLinks} _links
 */
PipelineExecution.prototype['_links'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
PipelineExecution['StatusEnum'] = {

    /**
     * value: "NOT_STARTED"
     * @const
     */
    "NOT_STARTED": "NOT_STARTED",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "CANCELLING"
     * @const
     */
    "CANCELLING": "CANCELLING",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED",

    /**
     * value: "FINISHED"
     * @const
     */
    "FINISHED": "FINISHED",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};


/**
 * Allowed values for the <code>trigger</code> property.
 * @enum {String}
 * @readonly
 */
PipelineExecution['TriggerEnum'] = {

    /**
     * value: "ON_COMMIT"
     * @const
     */
    "ON_COMMIT": "ON_COMMIT",

    /**
     * value: "MANUAL"
     * @const
     */
    "MANUAL": "MANUAL",

    /**
     * value: "SCHEDULE"
     * @const
     */
    "SCHEDULE": "SCHEDULE",

    /**
     * value: "PUSH_UPGRADES"
     * @const
     */
    "PUSH_UPGRADES": "PUSH_UPGRADES"
};



export default PipelineExecution;

