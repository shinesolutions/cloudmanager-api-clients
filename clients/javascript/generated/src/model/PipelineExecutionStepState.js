/**
 * Cloud Manager API
 * This API allows access to Cloud Manager programs, pipelines, and environments by an authorized technical account created through the Adobe I/O Console. The base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs (with the correct set of headers as described below). This swagger file can be downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipelineExecutionStepStateLinks from './PipelineExecutionStepStateLinks';

/**
 * The PipelineExecutionStepState model module.
 * @module model/PipelineExecutionStepState
 * @version 1.0.0
 */
class PipelineExecutionStepState {
    /**
     * Constructs a new <code>PipelineExecutionStepState</code>.
     * Describes the status of a particular pipeline execution step for display purposes
     * @alias module:model/PipelineExecutionStepState
     */
    constructor() { 
        
        PipelineExecutionStepState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PipelineExecutionStepState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipelineExecutionStepState} obj Optional instance to populate.
     * @return {module:model/PipelineExecutionStepState} The populated <code>PipelineExecutionStepState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipelineExecutionStepState();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('stepId')) {
                obj['stepId'] = ApiClient.convertToType(data['stepId'], 'String');
            }
            if (data.hasOwnProperty('phaseId')) {
                obj['phaseId'] = ApiClient.convertToType(data['phaseId'], 'String');
            }
            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('repository')) {
                obj['repository'] = ApiClient.convertToType(data['repository'], 'String');
            }
            if (data.hasOwnProperty('branch')) {
                obj['branch'] = ApiClient.convertToType(data['branch'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('environmentType')) {
                obj['environmentType'] = ApiClient.convertToType(data['environmentType'], 'String');
            }
            if (data.hasOwnProperty('startedAt')) {
                obj['startedAt'] = ApiClient.convertToType(data['startedAt'], 'Date');
            }
            if (data.hasOwnProperty('finishedAt')) {
                obj['finishedAt'] = ApiClient.convertToType(data['finishedAt'], 'Date');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], {'String': Object});
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('_links')) {
                obj['_links'] = PipelineExecutionStepStateLinks.constructFromObject(data['_links']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
PipelineExecutionStepState.prototype['id'] = undefined;

/**
 * @member {String} stepId
 */
PipelineExecutionStepState.prototype['stepId'] = undefined;

/**
 * @member {String} phaseId
 */
PipelineExecutionStepState.prototype['phaseId'] = undefined;

/**
 * Name of the action
 * @member {String} action
 */
PipelineExecutionStepState.prototype['action'] = undefined;

/**
 * Target repository
 * @member {String} repository
 */
PipelineExecutionStepState.prototype['repository'] = undefined;

/**
 * Target branch
 * @member {String} branch
 */
PipelineExecutionStepState.prototype['branch'] = undefined;

/**
 * Target environment
 * @member {String} environment
 */
PipelineExecutionStepState.prototype['environment'] = undefined;

/**
 * Target environment type
 * @member {String} environmentType
 */
PipelineExecutionStepState.prototype['environmentType'] = undefined;

/**
 * Start time
 * @member {Date} startedAt
 */
PipelineExecutionStepState.prototype['startedAt'] = undefined;

/**
 * Date the execution reached a final state
 * @member {Date} finishedAt
 */
PipelineExecutionStepState.prototype['finishedAt'] = undefined;

/**
 * Information about step result
 * @member {Object.<String, Object>} details
 */
PipelineExecutionStepState.prototype['details'] = undefined;

/**
 * Action status
 * @member {module:model/PipelineExecutionStepState.StatusEnum} status
 */
PipelineExecutionStepState.prototype['status'] = undefined;

/**
 * @member {module:model/PipelineExecutionStepStateLinks} _links
 */
PipelineExecutionStepState.prototype['_links'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
PipelineExecutionStepState['StatusEnum'] = {

    /**
     * value: "NOT_STARTED"
     * @const
     */
    "NOT_STARTED": "NOT_STARTED",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "FINISHED"
     * @const
     */
    "FINISHED": "FINISHED",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "ROLLING_BACK"
     * @const
     */
    "ROLLING_BACK": "ROLLING_BACK",

    /**
     * value: "ROLLED_BACK"
     * @const
     */
    "ROLLED_BACK": "ROLLED_BACK",

    /**
     * value: "WAITING"
     * @const
     */
    "WAITING": "WAITING",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};



export default PipelineExecutionStepState;

